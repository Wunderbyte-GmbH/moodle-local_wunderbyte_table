define("local_wunderbyte_table/search",["exports","core/templates","local_wunderbyte_table/init"],(function(_exports,_templates,_init){var obj;
/*
   * @package    local_wunderbyte_table
   * @copyright  Wunderbyte GmbH <info@wunderbyte.at>
   * @license    http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later
   */Object.defineProperty(_exports,"__esModule",{value:!0}),_exports.getChecked=void 0,_exports.getFilterOjects=getFilterOjects,_exports.getSearchInput=getSearchInput,_exports.init=void 0,_exports.initializeCheckboxes=initializeCheckboxes,_exports.initializeSearch=initializeSearch,_exports.toggleCheckbox=_exports.searchInput=_exports.renderSearchbox=_exports.renderFilter=void 0,_templates=(obj=_templates)&&obj.__esModule?obj:{default:obj};var checked={},categories=[],listContainerSelector="",idstring="",encodedtable="",lastsearchinput=0;_exports.init=listContainer=>{console.log("listContainer",listContainer),listContainerSelector=listContainer,initializeSearch()};_exports.searchInput=(inputElement,elementToHide,elementToSearch)=>{let filter,li,a,i,txtValue;for(filter=inputElement.value.toUpperCase(),li=document.querySelectorAll(elementToHide),i=0;i<li.length;i++)a=elementToSearch?li[i].querySelector(elementToSearch):li[i],txtValue=a.textContent||a.innerText,txtValue.toUpperCase().indexOf(filter)>-1?li[i].style.display="":li[i].style.display="none"};const toggleCheckbox=e=>{console.log("checked",e.target.name),getChecked(e.target.name);const filterobjects=getFilterOjects(),searchstring=getSearchInput();console.log("reload from filter ",filterobjects),(0,_init.callLoadData)(idstring,encodedtable,0,null,null,null,null,null,filterobjects,searchstring)};_exports.toggleCheckbox=toggleCheckbox;const getChecked=name=>{checked[name]=Array.from(document.querySelectorAll("input[name="+name+"]:checked")).map((function(el){return el.value}))};_exports.getChecked=getChecked;_exports.renderFilter=(filterjson,idstringvar,encodedtable)=>{console.log(idstringvar);const selector=".wunderbyte_table_container_"+(idstring=idstringvar),container=document.querySelector(selector);container.querySelector(".wunderbyteTableFilter")||_templates.default.renderForPromise("local_wunderbyte_table/filter",filterjson).then((_ref=>{let{html:html}=_ref;console.log("encodedtable: ",encodedtable),container.insertAdjacentHTML("afterbegin",html),initializeCheckboxes(selector,idstring,encodedtable)})).catch((e=>{console.log(e)}))};function initializeSearch(){const inputElement=document.querySelector(listContainerSelector+" input.search");console.log("initializeSearch",inputElement),inputElement&&(inputElement.dataset.initialized||(inputElement.dataset.initialized=!0,inputElement.addEventListener("keyup",(()=>{let now=Date.now();lastsearchinput=now,setTimeout((()=>{const searchstring=getSearchInput();if(lastsearchinput===now&&(!searchstring||searchstring.length>3)){const filterobjects=getFilterOjects();(0,_init.callLoadData)(idstring,encodedtable,0,null,null,null,null,null,filterobjects,searchstring)}}),400)}))))}function getFilterOjects(){return JSON.stringify(checked)}function getSearchInput(){const inputElement=document.querySelector(listContainerSelector+" input.search");let searchstring=null;return inputElement.value.length>3&&(searchstring=inputElement.value),searchstring}function initializeCheckboxes(selector,idstringvar,encodedtablevar){encodedtable=encodedtablevar,idstring=idstringvar;const filterContainer=document.querySelector(selector+" .wunderbyteTableFilter");if(filterContainer.dataset.initialized)return;const allCheckboxes=filterContainer.querySelectorAll("input[type=checkbox]");allCheckboxes&&(filterContainer.querySelectorAll(".form-group").forEach((e=>{categories.push(e.getAttribute("name")),getChecked(e.getAttribute("name"))})),allCheckboxes.forEach((el=>{el.addEventListener("change",toggleCheckbox)})),filterContainer.dataset.initialized=!0)}_exports.renderSearchbox=idstring=>{const selector=".wunderbyte_table_container_"+idstring,container=document.querySelector(selector);container.querySelector("input.search")||_templates.default.renderForPromise("local_wunderbyte_table/search",[]).then((_ref2=>{let{html:html}=_ref2;container.insertAdjacentHTML("afterbegin",html),initializeSearch()})).catch((e=>{console.log(e)}))}}));

//# sourceMappingURL=search.min.js.map