define("local_wunderbyte_table/search",["exports","core/templates","local_wunderbyte_table/init","local_wunderbyte_table/filter","local_wunderbyte_table/sort"],(function(_exports,_templates,_init,_filter,_sort){var obj;
/*
   * @package    local_wunderbyte_table
   * @copyright  Wunderbyte GmbH <info@wunderbyte.at>
   * @license    http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later
   */Object.defineProperty(_exports,"__esModule",{value:!0}),_exports.getSearchInput=getSearchInput,_exports.initializeSearch=initializeSearch,_exports.renderSearchbox=void 0,_templates=(obj=_templates)&&obj.__esModule?obj:{default:obj};var lastsearchinputs={};function initializeSearch(containerselector,idstring,encodedtable){console.log("initializeSearch",idstring);const inputElement=document.querySelector(containerselector+" input.search");inputElement&&(inputElement.dataset.initialized||(inputElement.dataset.initialized=!0,inputElement.addEventListener("keyup",(e=>{let minlength=2,timeout=400;"Enter"==e.key&&(minlength=0,timeout=0);let now=Date.now();lastsearchinputs[idstring]=now,setTimeout((()=>{const searchstring=getSearchInput(idstring,minlength);if(lastsearchinputs[idstring]===now&&null!==searchstring){const filterobjects=(0,_filter.getFilterObjects)(idstring),sort=(0,_sort.getSortSelection)(idstring);(0,_init.callLoadData)(idstring,encodedtable,0,null,sort,null,null,null,filterobjects,searchstring)}}),timeout)}))))}function getSearchInput(idstring){let minlength=arguments.length>1&&void 0!==arguments[1]?arguments[1]:2;const inputElement=document.querySelector(".wunderbyte_table_container_"+idstring+" input.search");if(!inputElement)return null;let searchstring=null;return(inputElement.value.length>minlength||0===inputElement.value.length)&&(searchstring=inputElement.value),searchstring}_exports.renderSearchbox=idstring=>{const selector=".wunderbyte_table_container_"+idstring,container=document.querySelector(selector);container.querySelector("input.search")||_templates.default.renderForPromise("local_wunderbyte_table/search",[]).then((_ref=>{let{html:html}=_ref;container.insertAdjacentHTML("afterbegin",html),initializeSearch(selector)})).catch((e=>{console.log(e)}))}}));

//# sourceMappingURL=search.min.js.map