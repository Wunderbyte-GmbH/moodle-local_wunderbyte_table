define("local_wunderbyte_table/sort",["exports","local_wunderbyte_table/init","local_wunderbyte_table/filter","local_wunderbyte_table/search"],(function(_exports,_init,_filter,_search){function callSortAjax(event,idstring,encodedtable){console.log("callSortAjax was called");let sortcolumn=null,sortorder=null,reset=null;if(null!==event){if(console.log("sort called ",event.target.value),sortcolumn=event.target.value,reset=1,!sortcolumn)return}else{const container=document.querySelector(".wunderbyte_table_container_"+idstring),sortColumnElement=container.querySelector("select.sortcolumn");console.log("classname ",container.querySelector("a.changesortorder").className);let className=container.querySelector("a.changesortorder i").className;className.includes("asc")?(console.log("change order from A to z",className),sortorder=3,container.querySelector("a.changesortorder i").className=className.replace("asc","desc")):(console.log("change order from Z to A",className),sortorder=4,container.querySelector("a.changesortorder i").className=className.replace("desc","asc")),sortcolumn=sortColumnElement.selectedOptions[0].value}console.log("we found the sortcolum ",sortcolumn,sortorder);const filterobjects=(0,_filter.getFilterOjects)(idstring),searchstring=(0,_search.getSearchInput)(idstring);(0,_init.callLoadData)(idstring,encodedtable,0,sortcolumn,null,null,sortorder,reset,filterobjects,searchstring)}Object.defineProperty(_exports,"__esModule",{value:!0}),_exports.getSortSelection=function(idstring){if(!document.querySelector(".wunderbyte_table_container_"+idstring+" select.sort"))return null;return""},_exports.initializeSort=
/*
   * @package    local_wunderbyte_table
   * @copyright  Wunderbyte GmbH <info@wunderbyte.at>
   * @license    http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later
   */
function(listContainer,idstring,encodedtable){console.log("soinitializeSortrt called ",listContainer);const container=document.querySelector(listContainer),sortColumnElement=container.querySelector("select.sortcolumn"),sortOrderElement=container.querySelector("a.changesortorder");if(!sortColumnElement||!sortOrderElement)return;sortColumnElement.dataset.initialized&&sortOrderElement.dataset.initialized||(sortColumnElement.dataset.initialized=!0,sortOrderElement.dataset.initialized=!0,sortColumnElement.addEventListener("change",(e=>{callSortAjax(e,idstring,encodedtable)})),sortOrderElement.addEventListener("click",(()=>{callSortAjax(null,idstring,encodedtable)})))}}));

//# sourceMappingURL=sort.min.js.map