{"version":3,"file":"rowsdisplayselect.min.js","sources":["../src/rowsdisplayselect.js"],"sourcesContent":["// This file is part of Moodle - http://moodle.org/\n//\n// Moodle is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Moodle is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\n/*\n * @package    local_wunderbyte_table\n * @copyright  Wunderbyte GmbH <info@wunderbyte.at>\n * @license    http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n */\nimport {transmitAction} from \"local_wunderbyte_table/actionbutton\";\n\nconst SELECTOR = {\n    ROWSELECT: 'select.rowsperpage',\n};\n\n/**\n * Function getting value of select to choose how many rows will be displayed in table.\n * @param {string} selector\n * @param {string} idstring\n * @param {string} encodedtable\n * @returns {void};\n */\nexport function initializeRowsSelect(selector, idstring, encodedtable) {\n        const container = document.querySelector(selector);\n        if (!container) {\n            return;\n        }\n        const selectElements = container.querySelectorAll(SELECTOR.ROWSELECT);\n\n        selectElements.forEach(selectElement => {\n            if (!selectElement.dataset.initialized) {\n                selectElement.dataset.initialized = true;\n                selectElement.addEventListener('change', () => {\n                    const selectedvalue = selectElement.value;\n                    const data = {\n                        \"numberofrowsselect\": selectedvalue,\n                    };\n                    transmitAction(0, 'rownumberperpage', JSON.stringify(data), idstring, encodedtable);\n                });\n            }\n        });\n}\n"],"names":["selector","idstring","encodedtable","container","document","querySelector","querySelectorAll","SELECTOR","forEach","selectElement","dataset","initialized","addEventListener","data","value","JSON","stringify"],"mappings":"qOAgCqCA,SAAUC,SAAUC,oBAC3CC,UAAYC,SAASC,cAAcL,cACpCG,iBAGkBA,UAAUG,iBAAiBC,oBAEnCC,SAAQC,gBACdA,cAAcC,QAAQC,cACvBF,cAAcC,QAAQC,aAAc,EACpCF,cAAcG,iBAAiB,UAAU,WAE/BC,KAAO,oBADSJ,cAAcK,wCAIrB,EAAG,mBAAoBC,KAAKC,UAAUH,MAAOZ,SAAUC;;;;;;MA1BpFK,mBACS"}