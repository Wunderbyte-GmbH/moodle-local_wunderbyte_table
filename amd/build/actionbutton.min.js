define("local_wunderbyte_table/actionbutton",["exports","core/modal_factory","core/modal_events","core/ajax","local_wunderbyte_table/notifications","local_wunderbyte_table/reload","core/str","core_form/modalform"],(function(_exports,_modal_factory,_modal_events,_ajax,_notifications,_reload,_str,_modalform){function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj}}
/*
   * @package    local_wunderbyte_table
   * @copyright  Wunderbyte GmbH <info@wunderbyte.at>
   * @license    http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later
   */Object.defineProperty(_exports,"__esModule",{value:!0}),_exports.initializeActionButton=function(selector,idstring,encodedtable){const container=document.querySelector(selector);container.querySelectorAll(SELECTOR_ACTIONBUTTON).forEach((button=>{button.dataset.initialized||(button.dataset.initialized=!0,button.dataset.methodname&&button.dataset.methodname.length>0?button.dataset.ischeckbox?button.addEventListener("change",(()=>{const data=button.dataset;data.state=button.checked,console.log(data.state),transmitAction(button.dataset.id,button.dataset.methodname,JSON.stringify(data),idstring,encodedtable)})):button.addEventListener("click",(()=>{button.dataset.nomodal&&button.dataset.id>0?transmitAction(button.dataset.id,button.dataset.methodname,JSON.stringify(button.dataset),idstring,encodedtable):async function(button,idstring,encodedtable){var _labelarray$join,_button$dataset$title,_button$dataset$compo,_button$dataset$bodys,_button$dataset$compo2,_button$dataset$submi,_button$dataset$compo3;const id=button.dataset.id,methodname=button.dataset.methodname,data=button.dataset,result=function(id,idstring,data){var checkedids=[];const labelarray=[],container=document.querySelector("#a"+idstring);if(id<1){container.querySelectorAll(SELECTOR_CHECKBOX).forEach((x=>{x.checked&&(labelarray.push(returnLabel(x.id,data.labelcolumn)),checkedids.push(x.id))}))}else labelarray.push(returnLabel(id,data.labelcolumn)),checkedids.push(id);return{checkedids:checkedids,labelarray:labelarray};function returnLabel(id,label){try{return container.querySelector('[data-id="'+id+'"] [data-label="'+label+'"]').textContent}catch(e){return""+id}}}(id,idstring,data);var checkedids=result.checkedids;const labelarray=result.labelarray;if(checkedids.length<1){const message=await(0,_str.get_string)("nocheckboxchecked","local_wunderbyte_table");return void(0,_notifications.showNotification)(message,"danger")}const datastring=null!==(_labelarray$join=labelarray.join("<br>"))&&void 0!==_labelarray$join?_labelarray$join:"";let strings=[{key:null!==(_button$dataset$title=button.dataset.titlestring)&&void 0!==_button$dataset$title?_button$dataset$title:"generictitle",component:null!==(_button$dataset$compo=button.dataset.component)&&void 0!==_button$dataset$compo?_button$dataset$compo:"local_wunderbyte_table"},{key:null!==(_button$dataset$bodys=button.dataset.bodystring)&&void 0!==_button$dataset$bodys?_button$dataset$bodys:"genericbody",component:null!==(_button$dataset$compo2=button.dataset.component)&&void 0!==_button$dataset$compo2?_button$dataset$compo2:"local_wunderbyte_table",param:{data:datastring}},{key:null!==(_button$dataset$submi=button.dataset.submitbuttonstring)&&void 0!==_button$dataset$submi?_button$dataset$submi:"genericsubmit",component:null!==(_button$dataset$compo3=button.dataset.component)&&void 0!==_button$dataset$compo3?_button$dataset$compo3:"local_wunderbyte_table"}];const localizedstrings=await(0,_str.get_strings)(strings);_modal_factory.default.create({type:_modal_factory.default.types.SAVE_CANCEL}).then((modal=>(modal.setTitle(localizedstrings[0]),modal.setBody(localizedstrings[1]),modal.setSaveButtonText(localizedstrings[2]),modal.getRoot().on(_modal_events.default.save,(function(){0!=id?transmitAction(id,methodname,JSON.stringify(data),idstring,encodedtable):checkedids.forEach((cid=>{transmitAction(cid,methodname,JSON.stringify(data),idstring,encodedtable)}))})),modal.show(),modal))).catch((e=>{console.log(e)}))}(button,idstring,encodedtable)})):button.dataset.formname&&button.dataset.formname.length>0&&button.addEventListener("click",(e=>{const target=e.target;console.log("transmit data",target),function(button,titleText,bodyText,saveButtonText,idstring,encodedtable){console.log(button,bodyText,saveButtonText,idstring,encodedtable);const formname=button.dataset.formname;let data=button.dataset;data.id=button.dataset.id,console.log(data);let modalForm=new _modalform.default({formClass:formname,args:data,modalConfig:{title:titleText},returnFocus:button});modalForm.addEventListener(modalForm.events.FORM_SUBMITTED,(e=>{console.log(e.detail),(0,_reload.reloadAllTables)()})),modalForm.show()}(button,"title","body","button",idstring,encodedtable)})))}))},_exports.transmitAction=transmitAction,_modal_factory=_interopRequireDefault(_modal_factory),_modal_events=_interopRequireDefault(_modal_events),_ajax=_interopRequireDefault(_ajax),_modalform=_interopRequireDefault(_modalform);const SELECTOR_ACTIONBUTTON=".wb_action_button",SELECTOR_CHECKBOX="input.wb-checkbox";function transmitAction(id,methodname,datastring,idstring,encodedtable){_ajax.default.call([{methodname:"local_wunderbyte_table_execute_action",args:{id:parseInt(id),methodname:methodname,data:datastring,encodedtable:encodedtable},done:function(data){1==data.success?(0,_notifications.showNotification)(data.message,"success"):(0,_notifications.showNotification)(data.message,"danger"),(0,_reload.reloadAllTables)()},fail:function(ex){console.log("ex:"+ex)}}])}}));

//# sourceMappingURL=actionbutton.min.js.map