{"version":3,"file":"init.min.js","sources":["../src/init.js"],"sourcesContent":["// This file is part of Moodle - http://moodle.org/\r\n//\r\n// Moodle is free software: you can redistribute it and/or modify\r\n// it under the terms of the GNU General Public License as published by\r\n// the Free Software Foundation, either version 3 of the License, or\r\n// (at your option) any later version.\r\n//\r\n// Moodle is distributed in the hope that it will be useful,\r\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\r\n// GNU General Public License for more details.\r\n//\r\n// You should have received a copy of the GNU General Public License\r\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\r\n\r\n/*\r\n * @package    local_wunderbyte_table\r\n * @copyright  Wunderbyte GmbH <info@wunderbyte.at>\r\n * @license    http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\r\n */\r\n\r\nimport Ajax from 'core/ajax';\r\nimport Templates from 'core/templates';\r\nimport Notification from 'core/notification';\r\n\r\nimport { renderFilter, renderSearchbox } from 'local_wunderbyte_table/search';\r\n\r\n/**\r\n * Gets called from mustache template.\r\n * @param {string} idstring\r\n * @param {string} encodedtable\r\n */\r\nexport const init = (idstring, encodedtable) => {\r\n\r\n    if (idstring && encodedtable) {\r\n        respondToVisibility(idstring, encodedtable, callLoadData);\r\n    }\r\n};\r\n\r\n/**\r\n * React on visibility change.\r\n * @param {string} idstring\r\n * @param {string} encodedtable\r\n * @param {function} callback\r\n */\r\nfunction respondToVisibility(idstring, encodedtable, callback) {\r\n    let element = document.getElementById('a' + idstring);\r\n\r\n    if (element) {\r\n        element.dataset.encodedtable = encodedtable;\r\n    } else {\r\n        // If we don't find an element, we abort.\r\n        return;\r\n    }\r\n    var observer = new MutationObserver(function() {\r\n        if (!isHidden(element)) {\r\n            this.disconnect();\r\n            callback(idstring, encodedtable);\r\n        }\r\n    });\r\n\r\n    // We look if we find a hidden parent. If not, we load right away.\r\n    while (element !== null) {\r\n        if (!isHidden(element)) {\r\n            element = element.parentElement;\r\n        } else {\r\n            observer.observe(element, {attributes: true});\r\n            return;\r\n        }\r\n    }\r\n    callback(idstring, encodedtable);\r\n}\r\n\r\n/**\r\n * Function to reload a wunderbyte table from js.\r\n * Here we trim the idstring before we pass it to the calldatafunction.\r\n * @param {*} idstring\r\n * @param {*} encodedtable\r\n */\r\nexport function wbTableReload(idstring, encodedtable = null) {\r\n\r\n\r\n    // We need to trim the first character. We use the a to make sure no number is in first place due to random generation.\r\n    idstring = idstring.substring(1);\r\n\r\n    let element = document.getElementById('a' + idstring);\r\n\r\n    if (!element) {\r\n        // eslint-disable-next-line no-console\r\n        console.log('couldnt find element to reload', idstring);\r\n        return;\r\n    }\r\n\r\n    if (!encodedtable) {\r\n        encodedtable = element.dataset.encodedtable;\r\n\r\n        if (!encodedtable) {\r\n            // eslint-disable-next-line no-console\r\n            console.log('couldnt find encodedtable', encodedtable);\r\n            return;\r\n        }\r\n    }\r\n\r\n    callLoadData(idstring, encodedtable);\r\n}\r\n\r\n/**\r\n * Function to check visibility of element.\r\n * @param {*} el\r\n * @returns {boolean}\r\n */\r\n export const isHidden = (el) => {\r\n    var style = window.getComputedStyle(el);\r\n    return ((style.display === 'none') || (style.visibility === 'hidden'));\r\n};\r\n\r\n/**\r\n * Reloads the rendered table and sets it to the div with the right identifier.\r\n * @param {string} idstring\r\n * @param {string} encodedtable\r\n * @param {null|int} page\r\n * @param {null|string} tsort\r\n * @param {null|string} thide\r\n * @param {null|string} tshow\r\n * @param {null|int} tdir\r\n * @param {null|int} treset\r\n */\r\nexport const callLoadData = (\r\n    idstring,\r\n    encodedtable,\r\n    page = null,\r\n    tsort = null,\r\n    thide = null,\r\n    tshow = null,\r\n    tdir = null,\r\n    treset = null) => {\r\n\r\n    let table = document.getElementById('a' + idstring);\r\n\r\n    // This is now the individual spinner from the wunderbyte table template.\r\n    let spinner = document.querySelector('#a' + idstring + 'spinner .spinner-border');\r\n\r\n    if (spinner) {\r\n        spinner.classList.remove('hidden');\r\n    }\r\n    if (table) {\r\n        table.classList.add('hidden');\r\n    }\r\n\r\n    Ajax.call([{\r\n        methodname: \"local_wunderbyte_table_load_data\",\r\n        args: {\r\n            'encodedtable': encodedtable,\r\n            'page': page,\r\n            'tsort': tsort,\r\n            'thide': thide,\r\n            'tshow': tshow,\r\n            'tdir': tdir,\r\n            'treset': treset\r\n        },\r\n        done: function(res) {\r\n\r\n            const jsonobject = JSON.parse(res.content);\r\n\r\n            const filterjson = JSON.parse(res.filterjson);\r\n\r\n            Templates.renderForPromise(res.template, jsonobject).then(({html, js}) => {\r\n\r\n                const frag = document.querySelector('#a' + idstring);\r\n\r\n                while (frag.firstChild) {\r\n                    frag.removeChild(table.lastChild);\r\n                }\r\n\r\n                Templates.appendNodeContents('#a' + idstring, html, js);\r\n\r\n                if (!page) {\r\n                    const activepage = frag.querySelector('li.page-item active');\r\n                    if (activepage) {\r\n                        page = activepage.getAttribute('data-page-number');\r\n                    }\r\n                }\r\n\r\n                replaceDownloadLink(idstring, encodedtable, frag);\r\n                replaceResetTableLink(idstring, encodedtable, frag, page);\r\n                replacePaginationLinks(idstring, encodedtable, frag);\r\n                replaceSortColumnLinks(idstring, encodedtable, frag, page);\r\n\r\n                return true;\r\n            }).catch(ex => {\r\n                Notification.addNotification({\r\n                    message: 'failed rendering ' + ex,\r\n                    type: \"danger\"\r\n                });\r\n            });\r\n\r\n            renderFilter(filterjson, idstring);\r\n            renderSearchbox(idstring);\r\n\r\n            if (spinner) {\r\n                spinner.classList.add('hidden');\r\n            }\r\n            if (table) {\r\n                table.classList.remove('hidden');\r\n            }\r\n            return true;\r\n        },\r\n        fail: function(err) {\r\n            // If we have an error, resetting the table might be enough. we do that.\r\n            // To avoid a loop, we only do this in special cases.\r\n            if ((treset != 1)) {\r\n                callLoadData(idstring, encodedtable, page, null, null, null, null, 1);\r\n            } else {\r\n                let node = document.createElement('DIV');\r\n                let textnode = document.createTextNode(err.message);\r\n                node.appendChild(textnode);\r\n                table.appendChild(node);\r\n                spinner.classList.add('hidden');\r\n                table.classList.remove('hidden');\r\n            }\r\n        }\r\n    }]);\r\n};\r\n\r\n/**\r\n * The rendered table has links we can't use. We replace them with eventlisteners and use the callLoadData function.\r\n * @param {string} idstring\r\n * @param {string} encodedtable\r\n * @param {DocumentFragment} frag\r\n * @param {int} page\r\n */\r\nfunction replaceSortColumnLinks(idstring, encodedtable, frag, page) {\r\n\r\n    var arrayOfItems = frag.querySelectorAll(\"th.header a\");\r\n\r\n    arrayOfItems.forEach(item => {\r\n        var sortid = item.getAttribute('data-sortby');\r\n        var sortorder = item.getAttribute('data-sortorder');\r\n        var thide = item.getAttribute('data-action') == 'hide' ? item.getAttribute('data-column') : null;\r\n        var tshow = item.getAttribute('data-action') == 'show' ? item.getAttribute('data-column') : null;\r\n\r\n        item.setAttribute('href', '#');\r\n        item.addEventListener('click', () => {\r\n            callLoadData(idstring, encodedtable, page, sortid, thide, tshow, sortorder);\r\n        });\r\n    });\r\n}\r\n\r\n/**\r\n * The rendered table has links we can't use. We replace them with eventlisteners and use the callLoadData function.\r\n * @param {string} idstring\r\n * @param {string} encodedtable\r\n * @param {DocumentFragment} frag\r\n * @param {int} page\r\n */\r\nfunction replaceResetTableLink(idstring, encodedtable, frag, page) {\r\n    var arrayOfItems = frag.querySelectorAll(\"div.resettable\");\r\n\r\n    if (!arrayOfItems || arrayOfItems.length == 0) {\r\n        return;\r\n    }\r\n    arrayOfItems.forEach(item => {\r\n        var classofelement = item.getAttribute('class');\r\n        if (classofelement.indexOf('resettable') >= 0) {\r\n            let listOfChildren = item.querySelectorAll('a');\r\n            listOfChildren.forEach(subitem => {\r\n                subitem.setAttribute('href', '#');\r\n                subitem.addEventListener('click', () => {\r\n                    callLoadData(idstring, encodedtable, page, null, null, null, null, 1);\r\n                });\r\n            });\r\n        }\r\n    });\r\n}\r\n\r\n/**\r\n * The rendered table has links we can't use. We replace them with eventlisteners and use the callLoadData function.\r\n * @param {string} idstring\r\n * @param {string} encodedtable\r\n * @param {DocumentFragment} frag\r\n */\r\nfunction replacePaginationLinks(idstring, encodedtable, frag) {\r\n    var arrayOfPageItems = frag.querySelectorAll(\".page-item\");\r\n\r\n    if (!arrayOfPageItems || arrayOfPageItems.length == 0) {\r\n        return;\r\n    }\r\n    arrayOfPageItems.forEach(item => {\r\n\r\n        let pageNumber = item.dataset.pagenumber;\r\n\r\n        if (pageNumber) {\r\n            --pageNumber;\r\n            item.addEventListener('click', () => {\r\n                callLoadData(idstring, encodedtable, pageNumber);\r\n            });\r\n        }\r\n    });\r\n}\r\n\r\n/**\r\n * The rendered table has links we can't use. We replace them with eventlisteners and use the callLoadData function.\r\n * @param {string} idstring\r\n * @param {string} encodedtable\r\n * @param {DocumentFragment} frag\r\n */\r\nfunction replaceDownloadLink(idstring, encodedtable, frag) {\r\n\r\n    var arrayOfItems = frag.querySelectorAll(\"form\");\r\n\r\n    arrayOfItems.forEach(item => {\r\n        if (item.tagName == 'FORM') {\r\n            item.setAttribute('method', 'POST');\r\n            let newnode = document.createElement('input');\r\n            newnode.setAttribute('type', 'hidden');\r\n            newnode.setAttribute('name', 'encodedtable');\r\n            newnode.setAttribute('value', encodedtable);\r\n            item.appendChild(newnode);\r\n        }\r\n    });\r\n}"],"names":["idstring","encodedtable","substring","element","document","getElementById","console","log","dataset","callLoadData","callback","observer","MutationObserver","isHidden","disconnect","observe","attributes","parentElement","respondToVisibility","el","style","window","getComputedStyle","display","visibility","page","tsort","thide","tshow","tdir","treset","table","spinner","querySelector","classList","remove","add","call","methodname","args","done","res","jsonobject","JSON","parse","content","filterjson","renderForPromise","template","then","_ref","html","js","frag","firstChild","removeChild","lastChild","appendNodeContents","activepage","getAttribute","replaceDownloadLink","replaceResetTableLink","replacePaginationLinks","replaceSortColumnLinks","catch","ex","addNotification","message","type","fail","err","node","createElement","textnode","createTextNode","appendChild","querySelectorAll","forEach","item","sortid","sortorder","setAttribute","addEventListener","arrayOfItems","length","indexOf","subitem","arrayOfPageItems","pageNumber","pagenumber","tagName","newnode"],"mappings":";;;;;0JA+E8BA,cAAUC,oEAAe,KAInDD,SAAWA,SAASE,UAAU,OAE1BC,QAAUC,SAASC,eAAe,IAAML,cAEvCG,oBAEDG,QAAQC,IAAI,iCAAkCP,cAI7CC,eACDA,aAAeE,QAAQK,QAAQP,cAE1BA,0BAEDK,QAAQC,IAAI,4BAA6BN,cAKjDQ,aAAaT,SAAUC,mKAvEP,CAACD,SAAUC,gBAEvBD,UAAYC,uBAWSD,SAAUC,aAAcS,cAC7CP,QAAUC,SAASC,eAAe,IAAML,cAExCG,eACAA,QAAQK,QAAQP,aAAeA,iBAK/BU,SAAW,IAAIC,kBAAiB,WAC3BC,SAASV,gBACLW,aACLJ,SAASV,SAAUC,uBAKR,OAAZE,SAAkB,IAChBU,SAASV,qBAGVQ,SAASI,QAAQZ,QAAS,CAACa,YAAY,IAFvCb,QAAUA,QAAQc,cAM1BP,SAASV,SAAUC,cAnCfiB,CAAoBlB,SAAUC,aAAcQ,qBA4EtCI,SAAYM,SAClBC,MAAQC,OAAOC,iBAAiBH,UACT,SAAlBC,MAAMG,SAA6C,WAArBH,MAAMI,6CAcpCf,aAAe,SACxBT,SACAC,kBACAwB,4DAAO,KACPC,6DAAQ,KACRC,6DAAQ,KACRC,6DAAQ,KACRC,4DAAO,KACPC,8DAAS,KAELC,MAAQ3B,SAASC,eAAe,IAAML,UAGtCgC,QAAU5B,SAAS6B,cAAc,KAAOjC,SAAW,2BAEnDgC,SACAA,QAAQE,UAAUC,OAAO,UAEzBJ,OACAA,MAAMG,UAAUE,IAAI,wBAGnBC,KAAK,CAAC,CACPC,WAAY,mCACZC,KAAM,cACctC,kBACRwB,WACCC,YACAC,YACAC,WACDC,YACEC,QAEdU,KAAM,SAASC,WAELC,WAAaC,KAAKC,MAAMH,IAAII,SAE5BC,WAAaH,KAAKC,MAAMH,IAAIK,sCAExBC,iBAAiBN,IAAIO,SAAUN,YAAYO,MAAKC,WAACC,KAACA,KAADC,GAAOA,eAExDC,KAAOjD,SAAS6B,cAAc,KAAOjC,eAEpCqD,KAAKC,YACRD,KAAKE,YAAYxB,MAAMyB,iCAGjBC,mBAAmB,KAAOzD,SAAUmD,KAAMC,KAE/C3B,KAAM,OACDiC,WAAaL,KAAKpB,cAAc,uBAClCyB,aACAjC,KAAOiC,WAAWC,aAAa,4BAIvCC,oBAAoB5D,SAAUC,aAAcoD,MAC5CQ,sBAAsB7D,SAAUC,aAAcoD,KAAM5B,MACpDqC,uBAAuB9D,SAAUC,aAAcoD,MAC/CU,uBAAuB/D,SAAUC,aAAcoD,KAAM5B,OAE9C,KACRuC,OAAMC,2BACQC,gBAAgB,CACzBC,QAAS,oBAAsBF,GAC/BG,KAAM,uCAIDtB,WAAY9C,sCACTA,UAEZgC,SACAA,QAAQE,UAAUE,IAAI,UAEtBL,OACAA,MAAMG,UAAUC,OAAO,WAEpB,GAEXkC,KAAM,SAASC,QAGI,GAAVxC,OACDrB,aAAaT,SAAUC,aAAcwB,KAAM,KAAM,KAAM,KAAM,KAAM,OAChE,KACC8C,KAAOnE,SAASoE,cAAc,OAC9BC,SAAWrE,SAASsE,eAAeJ,IAAIH,SAC3CI,KAAKI,YAAYF,UACjB1C,MAAM4C,YAAYJ,MAClBvC,QAAQE,UAAUE,IAAI,UACtBL,MAAMG,UAAUC,OAAO,yBAa9B4B,uBAAuB/D,SAAUC,aAAcoD,KAAM5B,MAEvC4B,KAAKuB,iBAAiB,eAE5BC,SAAQC,WACbC,OAASD,KAAKnB,aAAa,eAC3BqB,UAAYF,KAAKnB,aAAa,kBAC9BhC,MAA4C,QAApCmD,KAAKnB,aAAa,eAA2BmB,KAAKnB,aAAa,eAAiB,KACxF/B,MAA4C,QAApCkD,KAAKnB,aAAa,eAA2BmB,KAAKnB,aAAa,eAAiB,KAE5FmB,KAAKG,aAAa,OAAQ,KAC1BH,KAAKI,iBAAiB,SAAS,KAC3BzE,aAAaT,SAAUC,aAAcwB,KAAMsD,OAAQpD,MAAOC,MAAOoD,0BAYpEnB,sBAAsB7D,SAAUC,aAAcoD,KAAM5B,UACrD0D,aAAe9B,KAAKuB,iBAAiB,kBAEpCO,cAAuC,GAAvBA,aAAaC,QAGlCD,aAAaN,SAAQC,UACIA,KAAKnB,aAAa,SACpB0B,QAAQ,eAAiB,EAAG,CACtBP,KAAKF,iBAAiB,KAC5BC,SAAQS,UACnBA,QAAQL,aAAa,OAAQ,KAC7BK,QAAQJ,iBAAiB,SAAS,KAC9BzE,aAAaT,SAAUC,aAAcwB,KAAM,KAAM,KAAM,KAAM,KAAM,sBAa9EqC,uBAAuB9D,SAAUC,aAAcoD,UAChDkC,iBAAmBlC,KAAKuB,iBAAiB,cAExCW,kBAA+C,GAA3BA,iBAAiBH,QAG1CG,iBAAiBV,SAAQC,WAEjBU,WAAaV,KAAKtE,QAAQiF,WAE1BD,eACEA,WACFV,KAAKI,iBAAiB,SAAS,KAC3BzE,aAAaT,SAAUC,aAAcuF,4BAY5C5B,oBAAoB5D,SAAUC,aAAcoD,MAE9BA,KAAKuB,iBAAiB,QAE5BC,SAAQC,UACG,QAAhBA,KAAKY,QAAmB,CACxBZ,KAAKG,aAAa,SAAU,YACxBU,QAAUvF,SAASoE,cAAc,SACrCmB,QAAQV,aAAa,OAAQ,UAC7BU,QAAQV,aAAa,OAAQ,gBAC7BU,QAAQV,aAAa,QAAShF,cAC9B6E,KAAKH,YAAYgB"}