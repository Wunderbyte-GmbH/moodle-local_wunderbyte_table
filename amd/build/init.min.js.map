{"version":3,"file":"init.min.js","sources":["../src/init.js"],"sourcesContent":["// This file is part of Moodle - http://moodle.org/\n//\n// Moodle is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Moodle is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\n\n/*\n * @package    local_wunderbyte_table\n * @copyright Wunderbyte GmbH <info@wunderbyte.at>\n * @license    http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n */\n\nimport Ajax from 'core/ajax';\nimport Templates from 'core/templates';\nimport Notification from 'core/notification';\n\nimport {initializeCheckboxes, getFilterObjects} from 'local_wunderbyte_table/filter';\nimport {initializeSearch, getSearchInput} from 'local_wunderbyte_table/search';\nimport {initializeSort, getSortSelection} from 'local_wunderbyte_table/sort';\nimport {initializeReload} from 'local_wunderbyte_table/reload';\nimport {initializeActionButton} from 'local_wunderbyte_table/actionbutton';\nimport {initializeEditTableButton} from 'local_wunderbyte_table/edittable';\nimport {initializeReordering} from 'local_wunderbyte_table/reordering';\nimport {initializeRowsSelect} from './rowsdisplayselect';\nimport {initializeResetFilterButton,\n    updateUrlWithFilterSearchSort,\n    updateDownloadUrlWithFilterSearchSort} from './filter';\nimport {initializeFilterSearch} from './filtersearch';\n\nimport {get_string as getString} from 'core/str';\n\n// All these variables will be objects with the idstring so their tables as identifiers.\nvar loadings = {};\nexport var queries = {};\nvar scrollpages = {};\nvar tablejss = {};\nvar scrollingelement = {};\n\nvar moreThanOneTable = false;\nexport const SELECTORS = {\n    CONTAINER: \".wunderbyte_table_container_\",\n    FILTER: \" .wunderbyteTableFilter\",\n    WBTABLE: \"wunderbyte-table-\",\n    DOWNLOADELEMENT: \"form.wb-table-download-buttons\",\n};\n\n/**\n * Gets called from mustache template.\n * @param {string} idstring\n * @param {string} encodedtable\n */\nexport const init = (idstring, encodedtable) => {\n\n    // eslint-disable-next-line no-console\n    console.log('init booking ' + idstring, moreThanOneTable);\n\n    if (!queries[idstring]) {\n        checkInTable(idstring, encodedtable);\n    }\n\n    // Check if there is more than 1 tables, excluding tables created because of search.\n    let counter = 0;\n    counter = Object.entries(queries).length;\n\n    if (counter > 1) {\n        // Check if all have the same value for encodedtable.\n        const firstEncodedTable = Object.entries(queries)[0]?.encodedtable;\n        const allSame = Object.entries(queries).every(obj => obj.encodedtable === firstEncodedTable);\n        if (!allSame) {\n            moreThanOneTable = true;\n        }\n    }\n\n    if (idstring && encodedtable) {\n\n        if (!scrollpages.hasOwnProperty(idstring)) {\n\n            if (infinitescrollEnabled(idstring)) {\n                scrollpages[idstring] = 0;\n            } else {\n                scrollpages[idstring] = -1;\n            }\n\n        }\n        respondToVisibility(idstring, encodedtable, callLoadData);\n    }\n\n};\n\n/**\n * Handle Click on Dropdown\n * @param {string} idstring\n */\nconst initHandleDropdown = (idstring) => {\n    const elements = document.querySelectorAll('.wunderbyte_table_container_' + idstring + ' .hierarchy > button');\n    if (elements) {\n        elements.forEach(element => {\n            element.addEventListener('click', function(event) {\n                event.stopPropagation();\n                const sibling = element.nextElementSibling;\n                sibling.classList.toggle(\"show\");\n                event.preventDefault();\n                        });\n        });\n    }\n};\n\n/**\n * Handle Click on Dropdown\n *\n */\nconst initHandleDropdownFocusSearch = () => {\n\n\n    const checkboxes = document.querySelectorAll('.filterelement.filterouter');\n    if (checkboxes) {\n        Array.from(checkboxes).forEach(cb => {\n            cb.addEventListener('click', function(event) {\n                event.currentTarget.parentElement.parentElement.parentElement.firstElementChild.style.display = 'none';\n            });\n    });\n    }\n\n    const elements = document.querySelectorAll('.wunderbyteTableFilter .dropdownMenuButton');\n    if (elements) {\n        Array.from(elements).forEach(element => {\n            if (element.nextElementSibling.firstElementChild.children[1] &&\n                element.nextElementSibling.firstElementChild.children[1].hidden !== true) {\n                element.classList.add('hideFocus');\n            }\n            element.addEventListener('click', function(event) {\n                if (event.currentTarget == element) {\n                    setTimeout(() => {\n                        if (!element.nextElementSibling.firstElementChild.children[1].hidden) {\n                        element.nextElementSibling.firstElementChild.children[1].focus();\n                        const buttonHeight = element.clientHeight;\n                        element.nextElementSibling.firstElementChild.children[1].style.height = buttonHeight + 'px';\n                        const heightWm = buttonHeight + 3;\n                        if (element.nextElementSibling.firstElementChild.children[0].firstElementChild.innerHTML &&\n                            element.nextElementSibling.firstElementChild.children[0].firstElementChild.innerHTML.length > 28) {\n                                element.nextElementSibling.firstElementChild.children[0].firstElementChild.innerHTML =\n                                element.nextElementSibling.firstElementChild.children[0].firstElementChild.innerHTML\n                                .substring(0, 28);\n                        }\n                        element.nextElementSibling.firstElementChild.children[1].style.top = '-' + heightWm + 'px';\n                        element.nextElementSibling.firstElementChild.children[0].style.display = 'block';\n                        const posLabel = buttonHeight + 20;\n                        element.nextElementSibling.firstElementChild.children[0].style.top = '-' + posLabel + 'px';\n                        } else {\n                            element.nextElementSibling.firstElementChild.children[0].style.display = 'none';\n                        }\n                    }, 0);\n                }\n                        });\n        });\n    }\n};\n\n\n/**\n * Toggle aside block with filters.\n * @param {string} idstring\n */\nconst initToggleAside = (idstring) => {\n    const togglebutton = document.querySelector('#asidecollapse_' + idstring);\n\n    if (togglebutton) {\n        togglebutton.addEventListener('click', () => {\n            const aside = document.querySelector('.wunderbyte_table_container_' + idstring + ' aside');\n            aside.classList.toggle('inactive');\n            const wbtable = document.querySelector('.wunderbyte_table_container_' + idstring);\n            wbtable.classList.toggle('inactivefilter');\n        });\n    }\n\n};\n\n/**\n * React on visibility change.\n * @param {string} idstring\n * @param {string} encodedtable\n * @param {function} callback\n */\nfunction respondToVisibility(idstring, encodedtable, callback) {\n\n    const identifier = 'a' + idstring;\n    let element = document.querySelector('#' + identifier);\n\n    // If we find the table element AND if it has the encoded table set, we abort this.\n    // Hereby we avoid to run JS multiple times.\n    if (element && !element.dataset.encodedtable) {\n        element.dataset.encodedtable = encodedtable;\n    } else {\n\n        // We abort everything else, but we run again the components initialization.\n        // important, as parts of the table might have been reloaded.\n        initializeComponents(idstring, encodedtable);\n        return;\n    }\n\n    // We only make this callback during init if there is the spinner running.\n    // We don't want to run all of this if we don't use lazyloading.\n    let spinner = document.querySelector(\"#\" + identifier + 'spinner');\n\n    if ((spinner !== null) && !isHidden(spinner)) {\n\n        var observer = new MutationObserver(function() {\n            if (!isHidden(element)) {\n                this.disconnect();\n\n                callback(idstring, encodedtable);\n            }\n        });\n\n        const hiddenElement = returnHiddenElement(element);\n\n        if (hiddenElement !== null) {\n\n            observer.observe(hiddenElement, {attributes: true});\n        } else {\n            callback(idstring, encodedtable);\n        }\n\n    } else {\n\n        const selector = \".wunderbyte_table_container_\" + idstring;\n        const container = document.querySelector(selector);\n\n        if (container != undefined) {\n            // This is what we do when we didn't lazyload.\n            // replaceLinksInFrag(idstring, encodedtable, element, null);\n            addLinksToPagination(idstring, encodedtable, element);\n\n            initializeComponents(idstring, encodedtable);\n\n            // Check to see if scrolling near bottom of page; load more photos\n            // This shoiuld only be added once.\n\n            // As this can only be here once per table, we mark the table.\n            addScrollFunctionality(idstring, encodedtable, element);\n            initToggleAside(idstring);\n\n            initHandleDropdown(idstring);\n            initHandleDropdownFocusSearch();\n        }\n\n    }\n}\n\n/**\n * Return the next scrollable element.\n * @param {*} node\n * @returns {*} node\n */\nfunction getScrollParent(node) {\n    if (node === null) {\n        return null;\n    }\n    if (node.scrollHeight > node.clientHeight) {\n        if (doublecheckScrollable(node)) {\n            // In some cases (lazyouthtml table), we need to doublecheck if the element is scrollable.\n            return node;\n        } else {\n            return getScrollParent(node.parentNode);\n        }\n    } else {\n        return getScrollParent(node.parentNode);\n    }\n}\n\n/**\n * Function to check if element is scrollable by checking overflow.\n * @param {*} node\n * @returns {boolean}\n */\nfunction doublecheckScrollable(node) {\n    const styles = window.getComputedStyle(node);\n    const isScrollable = styles.overflow === 'scroll' || styles.overflow === 'auto';\n\n    return isScrollable;\n}\n\n/**\n * Function to check visibility of element.\n * @param {*} el\n * @returns {boolean}\n */\nexport const isHidden = (el) => {\n    var style = window.getComputedStyle(el);\n    return ((style.display === 'none') || (style.visibility === 'hidden'));\n};\n\n/**\n * Reloads the rendered table and sets it to the div with the right identifier.\n * @param {string} idstring\n * @param {string} encodedtable\n * @param {null|int} page\n * @param {null|string} tsort\n * @param {null|string} thide\n * @param {null|string} tshow\n * @param {null|int} tdir\n * @param {null|int} treset\n * @param {null|string} filterobjects\n * @param {null|string} searchtext\n * @param {null|bool} replacerow\n */\nexport const callLoadData = (\n    idstring,\n    encodedtable,\n    page = null,\n    tsort = null,\n    thide = null,\n    tshow = null,\n    tdir = null,\n    treset = null,\n    filterobjects = null,\n    searchtext = null,\n    replacerow = false) => {\n\n    if (loadings[idstring] && !replacerow) {\n        return;\n    }\n    // We reset scrollpage with 0 when we come from the filter.\n    if (page !== null) {\n\n        if (infinitescrollEnabled(idstring)) {\n            scrollpages[idstring] = page;\n        } else {\n            scrollpages[idstring] = -1;\n        }\n    }\n\n    // We always have to see if we need to apply a filter. Reload might come from scroll, but filter has to be applied nevertheless.\n    if (filterobjects === null) {\n        filterobjects = getFilterObjects(idstring);\n    }\n    // We always have to see if we need to apply a serachtextfilter.\n    if (searchtext === null) {\n        searchtext = getSearchInput(idstring);\n    }\n    // We always have to see if we need to apply a sortorder.\n    if (tsort === null) {\n        tsort = getSortSelection(idstring);\n    }\n\n    const table = document.getElementById('a' + idstring);\n\n    // We don't want to update URL for lazyout tables that be loaded (have childnodes) at this point.\n    if (moreThanOneTable !== true && (typeof table === 'object' && table !== null)) {\n        if (table.childNodes.length > 0) {\n            updateUrlWithFilterSearchSort(filterobjects, searchtext, tsort, tdir);\n        }\n    }\n\n    let container = document.querySelector(\".wunderbyte_table_container_\" + idstring);\n    if (container) {\n\n        const downloadelement = container.querySelector(SELECTORS.DOWNLOADELEMENT);\n\n        if (downloadelement && downloadelement.dataset.applyfilter) {\n\n            updateDownloadUrlWithFilterSearchSort(idstring, filterobjects, searchtext, tsort, tdir);\n        }\n    }\n\n    // This is now the individual spinner from the wunderbyte table template.\n    let spinner = document.querySelector('#a' + idstring + 'spinner .spinner-border');\n\n    // If we replace the whole table, we show the spinner. If we only add rows in infinite scroll, we don't.\n    if (scrollpages[idstring] == 0\n        && !replacerow) {\n        if (spinner) {\n            spinner.classList.remove('hidden');\n        }\n    }\n\n    // We also have the indidual load spinner.\n    // Show the call spinner.\n    let callspinner = document.querySelector(\".wunderbyte_table_container_\" + idstring + \" .wb-table-call-spinner\");\n    if (callspinner) {\n        callspinner.classList.remove('hidden');\n    }\n\n    // This is used to store information for reload etc.\n    checkInTable(\n        idstring,\n        encodedtable,\n        page,\n        tsort,\n        thide,\n        tshow,\n        tdir,\n        treset,\n        filterobjects,\n        searchtext,\n        replacerow\n    );\n\n    loadings[idstring] = true;\n\n    Ajax.call([{\n        methodname: \"local_wunderbyte_table_load_data\",\n        args: {\n            'encodedtable': encodedtable,\n            'page': page,\n            'tsort': tsort,\n            'thide': thide,\n            'tshow': tshow,\n            'tdir': tdir,\n            'treset': treset,\n            'wbtfilter': filterobjects,\n            'searchtext': searchtext\n        },\n        done: async function(res) {\n            // Hide the call spinner.\n            let callspinner = document.querySelector(\".wunderbyte_table_container_\" + idstring + \" .wb-table-call-spinner\");\n            if (callspinner) {\n                callspinner.classList.add('hidden');\n            }\n\n            let jsonobject = '';\n            try {\n               jsonobject = JSON.parse(res.content);\n            } catch (e) {\n\n                const message = await getString('couldnotloaddata', 'local_wunderbyte_table');\n\n                Notification.addNotification({\n                    message,\n                    type: \"danger\"\n                });\n\n                // We need say we are not loading anymore.\n                loadings[idstring] = false;\n\n                // eslint-disable-next-line no-console\n                console.log(e);\n                return;\n            }\n\n            let rendertemplate = res.template;\n\n            // We can always expect a wunderbyte table container at this point.\n            // The container will hold wunderbyteTableClass, wunderbyteTableFilter, wunderbyteTableSearch classes.\n            let container = document.querySelector(\".wunderbyte_table_container_\" + idstring);\n            if (!container) {\n                return;\n            }\n            const componentscontainer = container.querySelector(\".wunderbyte_table_components\");\n\n            // If we only increase the scrollpage, we don't need to render everything again.\n            if (replacerow\n                || (scrollpages[idstring] > 0)) {\n\n                // Also, we want to use the table instead of the container template.\n                const rowtemplate = rendertemplate + '_row';\n\n                if (!jsonobject.table.hasOwnProperty('rows')) {\n                    // We set the scrollpage to -1 which means that we don't reload anymore.\n                    scrollpages[idstring] = -1;\n                    loadings[idstring] = false;\n                    return;\n                }\n                let rows = jsonobject.table.rows;\n\n                // We create an array of promises where every line is rendered individually.\n                const promises = rows.map(row => {\n                    Templates.renderForPromise(rowtemplate, row).then(({html, js}) => {\n\n                        if (replacerow) {\n\n                            // We need the id.\n                            const filterobject = JSON.parse(filterobjects);\n                            const rowid = filterobject.id;\n\n                            Templates.replaceNode(\"#a\" + idstring\n                                + \" .rows-container tr[data-id='\" + rowid + \"']\", html, js);\n                        } else {\n                            // Here we add the rendered content to the table div.\n                            Templates.appendNodeContents('#a' + idstring + \" .rows-container\", html, js);\n                        }\n\n                        return true;\n                    }).catch(e => {\n                        // eslint-disable-next-line no-console\n                        console.log(e);\n                    });\n                    return true;\n                });\n\n\n                if (!tablejss.hasOwnProperty(idstring)) {\n\n                    const promise = returnPromiseToSaveJS(rendertemplate, jsonobject, idstring);\n\n                    promises.push(promise);\n                }\n\n                // Once all the promises are fullfilled, we set loading to false.\n                Promise.all(promises).then(() => {\n\n                    setTimeout(() => {\n                        // We only added rows, but they might need some js from the table, so we add the table js again.\n                        Templates.appendNodeContents('#a' + idstring, '', tablejss[idstring]);\n\n                    }, 100);\n\n                    loadings[idstring] = false;\n\n                    return;\n                }).catch(e => {\n                    // eslint-disable-next-line no-console\n                    console.log(e);\n                });\n\n                return;\n            }\n\n            const promises = [];\n            if (!componentscontainer) {\n                // If the componentscontainer is not yet rendered, we render the container. else, only the table.\n                rendertemplate = rendertemplate + '_container';\n            } else {\n                const sortselector = '.wunderbyteTableSelect';\n                promises.push(Templates.renderForPromise('local_wunderbyte_table/component_sort', jsonobject).then(({html, js}) => {\n                    const element = container.querySelector(sortselector);\n                    Templates.replaceNode(element, html, js);\n                    // Make sure the element is working.\n                    initializeComponents(idstring, encodedtable);\n                    return true;\n                }).catch(ex => {\n                    // eslint-disable-next-line no-console\n                    console.log(ex);\n                }));\n            }\n\n            let frag = container.querySelector(\".wunderbyteTableClass\");\n\n            // If we called a sorting and the result is an empty array, we don't need to render.\n            let rows = jsonobject.table.rows;\n            if (tsort && (!rows || rows.length < 1)) {\n\n                if (spinner) {\n                    spinner.classList.add('hidden');\n                }\n                if (table) {\n                    table.classList.remove('hidden');\n                }\n\n                loadings[idstring] = false;\n\n            } else {\n                // We render the html with the right template.\n                promises.push(Templates.renderForPromise(rendertemplate, jsonobject).then(({html, js}) => {\n\n                    if (componentscontainer) {\n                        // Now we clean the existing table.\n                        while (frag.firstChild) {\n                            frag.removeChild(frag.lastChild);\n                        }\n\n                        // Here we add the rendered content to the table div.\n                        Templates.appendNodeContents('#a' + idstring, html, js);\n                    } else {\n                        // Here we try to render the whole.hro\n                        const parent = container.parentElement;\n                        container.remove();\n                        Templates.appendNodeContents(parent, html, js);\n\n                        container = document.querySelector(\".wunderbyte_table_container_\" + idstring);\n                    }\n                    if (container == undefined) {\n                        return true;\n                    }\n                    addLinksToPagination(idstring, encodedtable, container);\n\n                    // When everything is done, we loaded fine.\n                    loadings[idstring] = false;\n\n                    if (spinner) {\n                        spinner.classList.add('hidden');\n                    }\n                    if (table) {\n                        table.classList.remove('hidden');\n                    }\n\n                    // Make sure all elements are working.\n                    initializeComponents(idstring, encodedtable);\n\n                    if (!container) {\n                        return true;\n                    }\n                    const element = container.querySelector('#a' + idstring);\n\n                    // This is the place where we are after lazyloading. We check if we need to reinitialize scrolllistener:\n                    addScrollFunctionality(idstring, encodedtable, element);\n\n                    if (container) {\n                        container.scrollIntoView({\n                            behavior: 'smooth',\n                            block: 'start'\n                        });\n                    }\n\n                    return true;\n                }).catch(ex => {\n                    loadings[idstring] = false;\n                    Notification.addNotification({\n                        message: 'failed rendering ' + ex,\n                        type: \"danger\"\n                    });\n                }));\n            }\n\n            // We excecute the promises from the array one after the other.\n            // eslint-disable-next-line no-unused-vars\n            const x = await promises[0];\n            // eslint-disable-next-line no-unused-vars\n            const y = await promises[1];\n        },\n        fail: function(err) {\n\n            // If we have an error, resetting the table might be enough. we do that.\n            // To avoid a loop, we only do this in special cases.\n            if ((treset != 1)) {\n                callLoadData(idstring, encodedtable, page, null, null, null, null, 1);\n            } else {\n                let node = document.createElement('DIV');\n                let textnode = document.createTextNode(err.message);\n                node.appendChild(textnode);\n                table.appendChild(node);\n                spinner.classList.add('hidden');\n                table.classList.remove('hidden');\n\n                // Hide the call spinner.\n                let callspinner = document.querySelector(\".wunderbyte_table_container_\" + idstring + \" .wb-table-call-spinner\");\n                if (callspinner) {\n                    callspinner.classList.add('hidden');\n                }\n            }\n        }\n    }]);\n};\n\n\n/**\n * Add the scroll functionality to the right table.\n * @param {*} idstring\n * @param {*} encodedtable\n * @param {*} element\n * @returns {void}\n */\nfunction addScrollFunctionality(idstring, encodedtable, element) {\n\n    // First we check if scroll functioanlity is enabled.\n    if (!infinitescrollEnabled(idstring)) {\n        return;\n    }\n\n    if (element.dataset.scrollinitialized) {\n        return;\n    }\n\n    element.dataset.scrollinitialized = true;\n\n    const scrollableelement = getScrollParent(element);\n\n    if (scrollableelement) {\n        scrollableelement.addEventListener('scroll', () => {\n\n            if (!scrollingelement.hasOwnProperty(idstring)) {\n                scrollingelement[idstring] = 'scrollElement';\n            } else {\n                if (scrollingelement[idstring] === 'scrollElement') {\n                    scrollListener(element, idstring, encodedtable);\n                }\n            }\n        });\n    }\n\n    // It's not easy to decide which is the right, so we have to add both.\n    window.addEventListener('scroll', () => {\n\n        if (!scrollingelement.hasOwnProperty(idstring)) {\n            scrollingelement[idstring] = 'window';\n        } else {\n            if (scrollingelement[idstring] === 'window') {\n                scrollListener(element, idstring, encodedtable);\n            }\n        }\n    });\n\n}\n\n/**\n * To be called in the scroll listener.\n * @param {node} element\n * @param {string} idstring\n * @param {string} encodedtable\n * @returns {void}\n */\nfunction scrollListener(element, idstring, encodedtable) {\n    // We only want to scroll, if the element is visible.\n    // So, if we find a hidden element in the parent, we don't scroll.\n    if (returnHiddenElement(element)) {\n        return;\n    }\n    const elementtop = element.getBoundingClientRect().top;\n    const screenheight = document.body.scrollHeight;\n\n    let container = document.querySelector(\".wunderbyte_table_container_\" + idstring);\n    const tableelement = container.querySelector('[class^=\"' + SELECTORS.WBTABLE + '\"]');\n\n    // If we can't find this table element, we abort.\n    if (!tableelement) {\n        return;\n    }\n\n    const tableelementheight = tableelement.getBoundingClientRect().height;\n\n    if (!loadings[idstring] && scrollpages[idstring] >= 0) {\n        if (elementtop + tableelementheight - screenheight < 0) {\n            scrollpages[idstring] = scrollpages[idstring] + 1;\n            callLoadData(idstring,\n                encodedtable,\n                scrollpages[idstring],\n                null,\n                null,\n                null,\n                null,\n                null,\n                null,\n                null);\n        }\n    }\n}\n\n/**\n * If the element or one of its parents is hidden, we return it. the hiddenn element.\n * Else we return null.\n * @param {node} element\n * @returns {null|node}\n */\nfunction returnHiddenElement(element) {\n    // We look if we find a hidden parent. If not, we load right away.\n    while (element !== null) {\n        if (!isHidden(element)) {\n            element = element.parentElement;\n        } else {\n            return element;\n        }\n    }\n    return null;\n}\n\n\n/**\n * The rendered table has links we can't use. We replace them with eventlisteners and use the callLoadData function.\n * @param {string} idstring\n * @param {string} encodedtable\n * @param {DocumentFragment} frag\n */\nfunction addLinksToPagination(idstring, encodedtable, frag) {\n    if (!frag) {\n        return;\n    }\n\n    var arrayOfPageItems = frag.querySelectorAll(\".page-item\");\n\n    if (!arrayOfPageItems || arrayOfPageItems.length == 0) {\n        return;\n    }\n    arrayOfPageItems.forEach(item => {\n\n        let pageNumber = item.dataset.pagenumber;\n\n        if (pageNumber) {\n            --pageNumber;\n            item.addEventListener('click', () => {\n                callLoadData(idstring, encodedtable, pageNumber);\n            });\n        }\n    });\n}\n\n/**\n * Function to check if the talbe in question has infinitescroll enabled.\n * @param {string} idstring\n * @returns {bool}\n */\nexport function infinitescrollEnabled(idstring) {\n    // If we don't find the infinitescrollelement, we don#t add the listener.\n    const selector = \".wunderbyte_table_container_\" + idstring;\n    if (document.querySelector(selector + ' div.infinitescroll_enabled')) {\n        return true;\n    }\n    return false;\n}\n\n/**\n * Initialize all the JS we need.\n * @param {string} idstring\n * @param {string} encodedtable\n */\nfunction initializeComponents(idstring, encodedtable) {\n    const selector = \".wunderbyte_table_container_\" + idstring;\n\n        initializeCheckboxes(selector, idstring, encodedtable);\n        initializeSearch(selector, idstring, encodedtable);\n        initializeSort(selector, idstring, encodedtable);\n        initializeRowsSelect(selector, idstring, encodedtable);\n        initializeFilterSearch(selector, idstring, encodedtable);\n        initializeResetFilterButton(selector, idstring, encodedtable);\n        initializeEditTableButton(selector, idstring, encodedtable);\n        initializeReordering(selector, idstring, encodedtable);\n\n        // A very strange error leads to a failed import from the reloadTable.js under some circumstances.\n        // Reload has to be called with this precaution therefore.\n        if (initializeReload) {\n            initializeReload(selector, idstring, encodedtable);\n        }\n        initializeActionButton(selector, idstring, encodedtable);\n\n}\n\n/**\n * Function to return promise.\n * @param {*} rendertemplate\n * @param {*} jsonobject\n * @param {*} idstring\n * @returns {Promise}\n */\nfunction returnPromiseToSaveJS(rendertemplate, jsonobject, idstring) {\n    // eslint-disable-next-line no-unused-vars\n    return Templates.renderForPromise(rendertemplate, jsonobject).then(({html, js}) => {\n\n        tablejss[idstring] = js;\n\n        return true;\n    }).catch(e => {\n        // eslint-disable-next-line no-console\n        console.log(e);\n    });\n}\n\n/**\n * Function to save queries. Has some logic which helps us to achieve the desired result.\n * @param {*} idstring\n * @param {*} encodedtable\n * @param {*} page\n * @param {*} tsort\n * @param {*} thide\n * @param {*} tshow\n * @param {*} tdir\n * @param {*} treset\n * @param {*} filterobjects\n * @param {*} searchtext\n * @param {*} replacerow\n */\nfunction checkInTable(\n    idstring,\n    encodedtable,\n    page = null,\n    tsort = null,\n    thide = null,\n    tshow = null,\n    tdir = null,\n    treset = null,\n    filterobjects = null,\n    searchtext = null,\n    replacerow = false) {\n\n    // We don't want to save any queries that want to replace row.\n    if (replacerow) {\n        return;\n    }\n\n    queries[idstring] = {\n        idstring,\n        encodedtable,\n        page,\n        tsort,\n        thide,\n        tshow,\n        tdir,\n        treset,\n        filterobjects,\n        searchtext,\n        replacerow: false // Replace row is always false.\n    };\n}"],"names":["_interopRequireDefault","e","__esModule","default","_ajax","_templates","_notification","loadings","queries","_exports","scrollpages","tablejss","scrollingelement","moreThanOneTable","SELECTORS","CONTAINER","FILTER","WBTABLE","DOWNLOADELEMENT","init","idstring","encodedtable","console","log","checkInTable","counter","Object","entries","length","firstEncodedTable","every","obj","hasOwnProperty","infinitescrollEnabled","callback","identifier","element","document","querySelector","dataset","initializeComponents","spinner","isHidden","selector","undefined","addLinksToPagination","addScrollFunctionality","initToggleAside","initHandleDropdown","initHandleDropdownFocusSearch","observer","MutationObserver","this","disconnect","hiddenElement","returnHiddenElement","observe","attributes","respondToVisibility","callLoadData","elements","querySelectorAll","forEach","addEventListener","event","stopPropagation","nextElementSibling","classList","toggle","preventDefault","checkboxes","Array","from","cb","currentTarget","parentElement","firstElementChild","style","display","children","hidden","add","setTimeout","focus","buttonHeight","clientHeight","height","heightWm","innerHTML","substring","top","posLabel","togglebutton","getScrollParent","node","scrollHeight","styles","window","getComputedStyle","overflow","doublecheckScrollable","parentNode","el","visibility","page","arguments","tsort","thide","tshow","tdir","treset","filterobjects","searchtext","replacerow","getFilterObjects","getSearchInput","getSortSelection","table","getElementById","childNodes","updateUrlWithFilterSearchSort","container","downloadelement","applyfilter","updateDownloadUrlWithFilterSearchSort","remove","callspinner","Ajax","call","methodname","args","wbtfilter","done","async","res","jsonobject","JSON","parse","content","message","getString","Notification","addNotification","type","rendertemplate","template","componentscontainer","rowtemplate","promises","rows","map","row","Templates","renderForPromise","then","_ref","html","js","rowid","id","replaceNode","appendNodeContents","catch","promise","_ref4","returnPromiseToSaveJS","push","Promise","all","sortselector","_ref2","ex","frag","_ref3","firstChild","removeChild","lastChild","parent","scrollIntoView","behavior","block","fail","err","createElement","textnode","createTextNode","appendChild","scrollinitialized","scrollableelement","scrollListener","elementtop","getBoundingClientRect","screenheight","body","tableelement","tableelementheight","arrayOfPageItems","item","pageNumber","pagenumber","initializeCheckboxes","initializeSearch","initializeSort","initializeRowsSelect","initializeFilterSearch","initializeResetFilterButton","initializeEditTableButton","initializeReordering","initializeReload","initializeActionButton"],"mappings":"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"}