{"version":3,"file":"reload.min.js","sources":["../src/reload.js"],"sourcesContent":["\n// This file is part of Moodle - http://moodle.org/\n//\n// Moodle is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Moodle is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\n\n/*\n * @package    local_wunderbyte_table\n * @copyright  Wunderbyte GmbH <info@wunderbyte.at>\n * @license    http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n */\n\nimport {callLoadData, queries, infinitescrollEnabled} from 'local_wunderbyte_table/init';\nimport {getFilterObjects} from 'local_wunderbyte_table/filter';\nimport {getSearchInput} from 'local_wunderbyte_table/search';\nimport {getSortSelection} from 'local_wunderbyte_table/sort';\n\n/**\n * Function to initialize the search after rendering the searchbox.\n * @param {*} selector\n * @param {*} idstring\n * @param {*} encodedtable\n * @returns {void}\n */\n export function initializeReload(selector, idstring, encodedtable) {\n\n  const button = document.querySelector(selector + \" .wb_reload_button\");\n\n  if (!button) {\n    return;\n  }\n\n  const idstringplusa = 'a' + idstring;\n\n  button.addEventListener('click', () => {\n\n    wbTableReload(idstringplusa, encodedtable);\n  });\n}\n\n/**\n * Function to reload a wunderbyte table from js.\n * Here we trim the idstring before we pass it to the calldatafunction.\n * @param {*} idstringplusa\n * @param {*} encodedtable\n * @param {number} rowid\n */\n export function wbTableReload(idstringplusa, encodedtable, rowid = 0) {\n\n  // We need to trim the first character. We use the a to make sure no number is in first place due to random generation.\n  const idstring = idstringplusa.substring(1);\n\n  let filterobjects = getFilterObjects(idstring);\n\n  // If we have a rowid, we add the rowid to the filter.\n  if (rowid > 0) {\n\n      let filterobject = {};\n\n      if (filterobjects.length !== 0) {\n          filterobject = JSON.parse(filterobjects);\n      }\n\n      filterobject.id = [rowid];\n      filterobjects = JSON.stringify(filterobject);\n  }\n\n  const replacerow = rowid > 0 ? true : false;\n\n  const searchstring = getSearchInput(idstring);\n  const sort = getSortSelection(idstring);\n\n  callLoadData(idstring,\n      encodedtable,\n      0, // Pagenumber is always rest to 0.\n      null,\n      sort,\n      null,\n      null,\n      null,\n      filterobjects,\n      searchstring,\n      replacerow);\n}\n\n/**\n * This function can be called from a button. The button identifies the table and the id and calls reload.\n * @param {HTMLElement} element\n */\nexport function wbTableRowReload(element) {\n\n  let parentelement = element;\n  let rowid = null;\n\n  // We run through the parents until we have the table class.\n  while (!parentelement.classList.contains('wunderbyteTableClass')) {\n      // We only want the first id, so we check if we have found an id already.\n      if (!rowid && parentelement.dataset.id) {\n          rowid = parentelement.dataset.id;\n      }\n      parentelement = parentelement.parentElement;\n\n      if (!parentelement) {\n          break;\n      }\n  }\n  // Only if we have found a parent element, we call reload.\n  if (parentelement) {\n      const idstring = parentelement.getAttribute('id');\n      const encodedtable = parentelement.dataset.encodedtable;\n\n      wbTableReload(idstring, encodedtable, rowid);\n  }\n\n}\n\n/**\n * Reload all other tables on the same page.\n */\nexport function reloadAllTables() {\n\n  // eslint-disable-next-line no-unused-vars\n  for (const [key, value] of Object.entries(queries)) {\n\n    // When we have infinite scroll, we need to all the currently shown pages.\n    if (infinitescrollEnabled(value.idstring)) {\n      let counter = 0;\n      while (counter <= value.page) {\n        callLoadData(\n          value.idstring,\n          value.encodedtable,\n          counter,\n          value.tsort,\n          value.thide,\n          value.tshow,\n          value.tdir,\n          value.treset,\n          value.filterobjects,\n          value.searchtext,\n          value.replacerow\n        );\n        counter++;\n      }\n\n    } else {\n      callLoadData(\n        value.idstring,\n        value.encodedtable,\n        value.page,\n        value.tsort,\n        value.thide,\n        value.tshow,\n        value.tdir,\n        value.treset,\n        value.filterobjects,\n        value.searchtext,\n        value.replacerow\n    );\n    }\n  }\n}"],"names":["wbTableReload","idstringplusa","encodedtable","rowid","idstring","substring","filterobjects","filterobject","length","JSON","parse","id","stringify","replacerow","searchstring","sort","selector","button","document","querySelector","addEventListener","key","value","Object","entries","queries","counter","page","tsort","thide","tshow","tdir","treset","searchtext","element","parentelement","classList","contains","dataset","parentElement","getAttribute"],"mappings":"wOAyDiBA,cAAcC,cAAeC,kBAAcC,6DAAQ,QAG5DC,SAAWH,cAAcI,UAAU,OAErCC,eAAgB,4BAAiBF,aAGjCD,MAAQ,EAAG,KAEPI,aAAe,GAEU,IAAzBD,cAAcE,SACdD,aAAeE,KAAKC,MAAMJ,gBAG9BC,aAAaI,GAAK,CAACR,OACnBG,cAAgBG,KAAKG,UAAUL,oBAG7BM,WAAaV,MAAQ,EAErBW,cAAe,0BAAeV,UAC9BW,MAAO,0BAAiBX,iCAEjBA,SACTF,aACA,EACA,KACAa,KACA,KACA,KACA,KACAT,cACAQ,aACAD;;;;;;SA1D4BG,SAAUZ,SAAUF,oBAE9Ce,OAASC,SAASC,cAAcH,SAAW,0BAE5CC,oBAIChB,cAAgB,IAAMG,SAE5Ba,OAAOG,iBAAiB,SAAS,KAE/BpB,cAAcC,cAAeC,0DAsF1B,MAAOmB,IAAKC,SAAUC,OAAOC,QAAQC,mBAGpC,+BAAsBH,MAAMlB,UAAW,KACrCsB,QAAU,OACPA,SAAWJ,MAAMK,6BAEpBL,MAAMlB,SACNkB,MAAMpB,aACNwB,QACAJ,MAAMM,MACNN,MAAMO,MACNP,MAAMQ,MACNR,MAAMS,KACNT,MAAMU,OACNV,MAAMhB,cACNgB,MAAMW,WACNX,MAAMT,YAERa,qCAKAJ,MAAMlB,SACNkB,MAAMpB,aACNoB,MAAMK,KACNL,MAAMM,MACNN,MAAMO,MACNP,MAAMQ,MACNR,MAAMS,KACNT,MAAMU,OACNV,MAAMhB,cACNgB,MAAMW,WACNX,MAAMT,qFAnEmBqB,aAE3BC,cAAgBD,QAChB/B,MAAQ,WAGJgC,cAAcC,UAAUC,SAAS,2BAEhClC,OAASgC,cAAcG,QAAQ3B,KAChCR,MAAQgC,cAAcG,QAAQ3B,IAElCwB,cAAgBA,cAAcI,cAEzBJ,oBAKLA,cAAe,OACT/B,SAAW+B,cAAcK,aAAa,MACtCtC,aAAeiC,cAAcG,QAAQpC,aAE3CF,cAAcI,SAAUF,aAAcC"}