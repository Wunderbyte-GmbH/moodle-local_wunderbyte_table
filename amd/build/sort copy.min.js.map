{"version":3,"file":"sort copy.min.js","sources":["../src/sort copy.js"],"sourcesContent":["\n// This file is part of Moodle - http://moodle.org/\n//\n// Moodle is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Moodle is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\n\n/*\n * @package    local_wunderbyte_table\n * @copyright  Wunderbyte GmbH <info@wunderbyte.at>\n * @license    http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n */\n\nimport {callLoadData} from 'local_wunderbyte_table/init';\nimport {getFilterOjects} from 'local_wunderbyte_table/filter';\nimport {getSearchInput} from 'local_wunderbyte_table/search';\n\n/**\n * Function to initialize the search after rendering the searchbox.\n * @param {*} listContainer\n * @param {*} idstring\n * @param {*} encodedtable\n * @returns {void}\n */\n export function initializeSort(listContainer, idstring, encodedtable) {\n\n    const container = document.querySelector(listContainer);\n\n    const sortColumnElement = container.querySelector('select.sortcolumn');\n    const sortOrderElement = container.querySelector('a.changesortorder');\n\n    if (!sortColumnElement || !sortOrderElement) {\n\n        return;\n    }\n\n    if (!sortColumnElement.dataset.initialized || !sortOrderElement.dataset.initialized) {\n\n      sortColumnElement.dataset.initialized = true;\n      sortOrderElement.dataset.initialized = true;\n\n      // We add to listener, on on the select, one on the sortorder button.\n\n      sortColumnElement.addEventListener('change', (e) => {\n        callSortAjax(e, idstring, encodedtable);\n      });\n      sortOrderElement.addEventListener('click', () => {\n        callSortAjax(null, idstring, encodedtable);\n      });\n    }\n}\n\n/**\n * Execture the two possible sort Ajax calls as reaction on the triggered event.\n * @param {*} event\n * @param {*} idstring\n * @param {*} encodedtable\n */\nfunction callSortAjax(event, idstring, encodedtable) {\n\n  let sortcolumn = null;\n  let sortorder = null;\n  let reset = null;\n\n  const container = document.querySelector(\".wunderbyte_table_container_\" + idstring);\n  const sortColumnElement = container.querySelector('select.sortcolumn');\n  let className = container.querySelector(\"a.changesortorder i\").className;\n\n  // If we get an event, we are in the sortcolum mode.\n  if (event !== null) {\n\n    sortcolumn = event.target.value;\n    // We reset only on changed sortcolumn, not on order.\n    reset = 1;\n\n    if (!sortcolumn) {\n      return;\n    }\n\n    // Get the sortorder by the icon and apply it.\n    if (className.includes('asc')) {\n\n      sortorder = 4;\n    } else {\n\n      sortorder = 3;\n    }\n\n  } else {\n    // Else, we are in the sortorder mode.\n    // 3 is ASC, 4 is DESC. We have to find out which is the current mode.\n\n    // Get the sortorder by the icon and change it.\n    if (className.includes('asc')) {\n\n      sortorder = 3;\n      container.querySelector(\"a.changesortorder i\").className = className.replace('asc', 'desc');\n    } else {\n\n      sortorder = 4;\n      container.querySelector(\"a.changesortorder i\").className = className.replace('desc', 'asc');\n    }\n\n    // We also need the sortcolumn name to effectuate the change.\n    sortcolumn = sortColumnElement.selectedOptions[0].value;\n  }\n\n   const filterobjects = getFilterOjects(idstring);\n   const searchstring = getSearchInput(idstring);\n\n\n   callLoadData(idstring,\n     encodedtable,\n     0, // We set page to 0 because we need to start the container anew.\n     sortcolumn,\n     null,\n     null,\n     sortorder,\n     reset,\n     filterobjects,\n     searchstring);\n}\n\n/**\n * Function to read the searchstring from the input leement.\n * @param {*} idstring\n * @returns {null|string}\n */\nexport function getSortSelection(idstring) {\n\n  const inputElement = document.querySelector(\".wunderbyte_table_container_\" + idstring + ' select.sort');\n\n  if (!inputElement) {\n    return null;\n  }\n\n  return '';\n}\n"],"names":["callSortAjax","event","idstring","encodedtable","sortcolumn","sortorder","reset","container","document","querySelector","sortColumnElement","className","target","value","includes","replace","selectedOptions","filterobjects","searchstring","listContainer","sortOrderElement","dataset","initialized","addEventListener","e"],"mappings":"uMAmESA,aAAaC,MAAOC,SAAUC,kBAEjCC,WAAa,KACbC,UAAY,KACZC,MAAQ,WAENC,UAAYC,SAASC,cAAc,+BAAiCP,UACpEQ,kBAAoBH,UAAUE,cAAc,yBAC9CE,UAAYJ,UAAUE,cAAc,uBAAuBE,aAGjD,OAAVV,MAAgB,IAElBG,WAAaH,MAAMW,OAAOC,MAE1BP,MAAQ,GAEHF,kBAOHC,UAFEM,UAAUG,SAAS,OAET,EAGA,OAQVH,UAAUG,SAAS,QAErBT,UAAY,EACZE,UAAUE,cAAc,uBAAuBE,UAAYA,UAAUI,QAAQ,MAAO,UAGpFV,UAAY,EACZE,UAAUE,cAAc,uBAAuBE,UAAYA,UAAUI,QAAQ,OAAQ,QAIvFX,WAAaM,kBAAkBM,gBAAgB,GAAGH,YAG7CI,eAAgB,2BAAgBf,UAChCgB,cAAe,0BAAehB,iCAGvBA,SACXC,aACA,EACAC,WACA,KACA,KACAC,UACAC,MACAW,cACAC,yGAQ4BhB,cAEVM,SAASC,cAAc,+BAAiCP,SAAW,uBAG/E,WAGF;;;;;;SAhHuBiB,cAAejB,SAAUC,oBAE/CI,UAAYC,SAASC,cAAcU,eAEnCT,kBAAoBH,UAAUE,cAAc,qBAC5CW,iBAAmBb,UAAUE,cAAc,yBAE5CC,oBAAsBU,wBAKtBV,kBAAkBW,QAAQC,aAAgBF,iBAAiBC,QAAQC,cAEtEZ,kBAAkBW,QAAQC,aAAc,EACxCF,iBAAiBC,QAAQC,aAAc,EAIvCZ,kBAAkBa,iBAAiB,UAAWC,IAC5CxB,aAAawB,EAAGtB,SAAUC,iBAE5BiB,iBAAiBG,iBAAiB,SAAS,KACzCvB,aAAa,KAAME,SAAUC"}