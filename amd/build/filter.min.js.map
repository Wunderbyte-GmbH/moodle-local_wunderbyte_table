{"version":3,"file":"filter.min.js","sources":["../src/filter.js"],"sourcesContent":["\n// This file is part of Moodle - http://moodle.org/\n//\n// Moodle is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Moodle is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\n\n/*\n * @package    local_wunderbyte_table\n * @copyright  Wunderbyte GmbH <info@wunderbyte.at>\n * @license    http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n */\n\nimport {getSearchInput} from 'local_wunderbyte_table/search';\nimport {getSortSelection} from 'local_wunderbyte_table/sort';\n\nimport {callLoadData, SELECTORS} from 'local_wunderbyte_table/init';\nimport Templates from 'core/templates';\n\n// These variables are specific to the filter.\nvar checked = {};\n\n/**\n * Initialize Checkboxes.\n * @param {string} selector\n * @param {string} idstring\n * @param {string} encodedtable\n */\n export function initializeCheckboxes(selector, idstring, encodedtable) {\n\n  const filterContainer = document.querySelector(selector + SELECTORS.FILTER);\n\n  if (!filterContainer || filterContainer.dataset.initialized) {\n    return;\n  }\n  const selects = filterContainer.querySelectorAll(\"select[id^='filteroperationselect']\");\n  const filterElements = filterContainer.querySelectorAll(\"input[class^='filterelement']\");\n\n  if (!filterElements) {\n      return;\n  }\n\n  // We create the key for the checked items of this table.\n  if (!checked.hasOwnProperty(idstring)) {\n    checked[idstring] = {};\n  }\n\n  applyChangelistener(filterElements, selector, idstring, encodedtable);\n  applyChangelistener(selects, selector, idstring, encodedtable);\n\n  filterContainer.dataset.initialized = true;\n}\n/**\n * Apply change listener to list of nodes.\n * @param {*} nodelist\n * @param {*} selector\n * @param {*} idstring\n * @param {*} encodedtable\n */\nfunction applyChangelistener(nodelist, selector, idstring, encodedtable) {\n  if (nodelist) {\n    nodelist.forEach(el => {\n\n      if (!el.dataset.idstring) {\n        el.dataset.idstring = idstring;\n      } else {\n        el.dataset.idstring2 = idstring;\n      }\n      el.addEventListener(\"change\", (e) => toggleFilterelement(e, selector, idstring, encodedtable));\n    });\n  }\n}\n/**\n * Init for button to reset all filter and searchparams.\n * @param {*} selector\n * @param {*} idstring\n * @param {*} encodedtable\n */\nexport function initializeResetFilterButton(selector, idstring, encodedtable) {\n  const container = document.querySelector(selector);\n  if (!container) {\n    return;\n  }\n  let button = container.querySelector(\".reset-filter-button\");\n\n  if (!button) {\n    return;\n  }\n  button.addEventListener('click', () => {\n\n    if (!container) {\n      return;\n    }\n\n    const componentscontainer = container.querySelector(\".wunderbyte_table_components\");\n\n    if (!componentscontainer) {\n      return;\n    }\n\n    componentscontainer.remove();\n\n    resetCheckedObject(idstring);\n\n    const sort = getSortSelection(idstring);\n    callLoadData(idstring,\n      encodedtable,\n      0, // Pagenumber is always set to 0.\n      null,\n      sort,\n      null,\n      null,\n      null,\n      \"\",\n      \"\");\n  });\n}\n/**\n * Eventhandler\n * @param {*} e\n * @param {*} selector\n * @param {*} idstring\n * @param {*} encodedtable\n */\n export function toggleFilterelement(e, selector, idstring, encodedtable) {\n\n  e.stopPropagation();\n  e.preventDefault();\n\n  setTimeout(() => {\n    // Check if Checkbox corresponds to datepicker\n    if (e.target.dataset.dateelement == 'dateelement') {\n      getDates(e, idstring);\n    } else {\n      getChecked(e.target.name, selector, idstring);\n    }\n\n    // Reload the filtered elements via ajax.\n    const filterobjects = getFilterObjects(idstring);\n    const searchstring = getSearchInput(idstring);\n    const sort = getSortSelection(idstring);\n\n    // The filter reloads data from the Server.\n    // Because of pages and infinite scroll we don't have the data to do without.\n    callLoadData(idstring,\n      encodedtable,\n      0, // Pagenumber is always set to 0.\n      null,\n      sort,\n      null,\n      null,\n      null,\n      filterobjects,\n      searchstring);\n  }, 400);\n}\n\n/**\n * Check if the checkbox of the filterparam is checked and if so write values from date- and timepicker into checked variable.\n * @param {*} e\n * @param {*} idstring\n */\nexport function getDates(e, idstring) {\n\n  let name = e.target.dataset.columnname;\n  let filtercontainer = e.target.closest(\".datepickerform\");\n  let filtername = e.target.dataset.filtername;\n  let filtercheckbox = filtercontainer.querySelector('input[type=\"checkbox\"][id^=\"' + filtername + '\"][name=\"' + name + '\"]');\n\n  let dates = {};\n  if (filtercheckbox.dataset.timespan === \"true\") {\n    compareDateValues(e, filtercontainer);\n  }\n  if (filtercheckbox.checked) {\n    // Check if we have a timespan filter or a single one.\n    if (filtercheckbox.dataset.timespan === \"true\") {\n      setTimespanFilter(filtercontainer, filtername, idstring, name);\n    } else {\n      dates[String(filtercheckbox.dataset.operator)] = getDateAndTimePickerDataAsUnix(filtercontainer, \"datefilter\") / 1000;\n      // Check if key is set in array, otherwise set new key.\n      if (name && filtername) {\n        if (!checked[idstring][name]) {\n          checked[idstring][name] = {};\n        }\n        checked[idstring][name][filtername] = dates;\n      }\n      unsetEmptyFieldsInCheckedObject(name, filtername, idstring);\n    }\n  } else { // If checkbox of filter is unchecked: unset values in checked object.\n    resetCheckedObject(idstring, name, filtername);\n    unsetEmptyFieldsInCheckedObject(name, null, idstring);\n    // Vorher noch ein if exists etc.\n    Object.keys(checked[idstring]).forEach(function(key) {\n        Object.keys(checked[idstring][key]).forEach(function(okey) {\n            if (okey == filtername) {\n              resetCheckedObject(idstring, key, filtername);\n              unsetEmptyFieldsInCheckedObject(key, null, idstring);\n            }\n          }\n        );\n      }\n    );\n  }\n}\n\n/**\n * Check if date and time value set in first timepicker is before second timepicker.\n * @param {*} e // The element that triggerd the change.\n * @param {*} filtercontainer\n */\nfunction compareDateValues(e, filtercontainer) {\n  let startdate = getDateAndTimePickerDataAsUnix(filtercontainer, \"startdate\");\n  let enddate = getDateAndTimePickerDataAsUnix(filtercontainer, \"enddate\");\n\n  // We make sure the entered enddate is after 2020, to avoid triggering change while date setting is not finished yet.\n  if ((enddate / 1000 > 1577836800) && (startdate > enddate)) {\n    // eslint-disable-next-line no-console\n    console.error(\"starttime should be before endtime\");\n    // Apply change.\n    setDateAndTimePickerDataFromUnix(filtercontainer, 'startdate', enddate);\n  }\n}\n\n/**\n * Checking Date and Timepicker for corresponding element and returning Unix Code.\n * @param {*} filtercontainer\n * @param {string} id // Id of the date- and timepicker, the value should be applied to.\n * @param {integer} timestamp\n */\nexport function setDateAndTimePickerDataFromUnix(filtercontainer, id = '', timestamp) {\n\n  let dateobject = new Date(timestamp);\n\n  let datepicker = filtercontainer.querySelector('input[type=\"date\"][id*=\"' + id + '\"]');\n  datepicker.value = dateobject.toISOString().split('T')[0];\n\n  let timepicker = filtercontainer.querySelector('input[type=\"time\"][id*=\"' + id + '\"]');\n  timepicker.value = dateobject.toLocaleTimeString().slice(0, 5);\n}\n\n/**\n * Applying a timespan filter.\n * @param {*} filtercontainer\n * @param {string} filtername\n * @param {string} idstring\n * @param {string} name\n */\nfunction setTimespanFilter(filtercontainer, filtername, idstring, name) {\n  // Selector defined the operators.\n  let select = filtercontainer.querySelector('select[id^=\"filteroperationselect\"][name=\"' + name + '\"]');\n  let operator = select.value;\n\n  // First Column to apply the filter to\n  let startdatepicker = filtercontainer.querySelector('input[id^=\"startdate\"]');\n  let firstcolumn = startdatepicker.dataset.applytocolumn;\n  let firstoperator = \"\";\n  let additionalFirstColumnValues = {};\n  let valuefirstcolumn = getDateAndTimePickerDataAsUnix(filtercontainer, \"startdate\") / 1000;\n\n  // Second Column to apply the filter to\n  let enddatepicker = filtercontainer.querySelector('input[id^=\"enddate\"]');\n  let secondcolumn = enddatepicker.dataset.applytocolumn;\n  let secondoperator = \"\";\n  let additionalSecondColumnValues = {};\n  let valuesecondcolumn = getDateAndTimePickerDataAsUnix(filtercontainer, \"enddate\") / 1000;\n\n  if (!Number.isInteger(valuefirstcolumn) || !Number.isInteger(valuefirstcolumn)) {\n    return;\n  }\n\n  // Unset the values of the span filter in checked object.\n  resetCheckedObject(idstring, firstcolumn, filtername);\n  resetCheckedObject(idstring, secondcolumn, filtername);\n\n  switch (operator) {\n    case \"within\":\n      firstoperator = \">=\";\n      secondoperator = \"<=\";\n      break;\n    case \"overlapboth\":\n      firstoperator = \"<=\";\n      secondoperator = \">=\";\n      break;\n    case \"overlapstart\":\n      firstoperator = \"<=\";\n      additionalSecondColumnValues[\">=\"] = valuefirstcolumn;\n      secondoperator = \"<=\";\n      break;\n    case \"overlapend\":\n      firstoperator = \">=\";\n      secondoperator = \">=\";\n      additionalFirstColumnValues[\"<=\"] = valuesecondcolumn;\n      break;\n    case \"before\":\n      firstoperator = \"<\";\n      additionalSecondColumnValues[\"<=\"] = valuefirstcolumn;\n      secondoperator = \"<\";\n      break;\n    case \"after\":\n      secondoperator = \">=\";\n      additionalFirstColumnValues[\">=\"] = valuesecondcolumn;\n      firstoperator = \">\";\n      break;\n    case \"flexoverlap\":\n      firstoperator = \"fo\";\n      secondoperator = \"fo\";\n      break;\n    default:\n    // eslint-disable-next-line no-console\n    console.error(\"Value of selection not readable\");\n    break;\n  }\n  applySpanfilter(firstcolumn, valuefirstcolumn, filtername, firstoperator, additionalFirstColumnValues, idstring);\n  applySpanfilter(secondcolumn, valuesecondcolumn, filtername, secondoperator, additionalSecondColumnValues, idstring);\n\n  // Unsetting the timespan filter if empty\n  if (firstcolumn && filtername) {\n    unsetEmptyFieldsInCheckedObject(firstcolumn, filtername, idstring);\n  }\n  if (secondcolumn && filtername) {\n    unsetEmptyFieldsInCheckedObject(secondcolumn, filtername, idstring);\n  }\n}\n\n/**\n *  Check if filter object already exisits and unset values.\n * @param {string} idstring\n * @param {string} column\n * @param {string} filtername\n */\nfunction resetCheckedObject(idstring, column = '', filtername = '') {\n\n  // If no column is specified, we reset all the filters.\n  if (column.length === 0) {\n\n    Object.keys(checked[idstring]).forEach(col => {\n      checked[idstring][col] = [];\n    });\n  } else {\n    if (checked[idstring].hasOwnProperty(column)) {\n      if (checked[idstring][column].hasOwnProperty(filtername)) {\n        delete checked[idstring][column][filtername];\n      }\n      if (checked[idstring][column].hasOwnProperty(filtername + 'a')) {\n        delete checked[idstring][column][filtername + 'a'];\n      }\n    }\n  }\n}\n\n/**\n *  Check if object already exisits and set values.\n * @param {string} column\n * @param {*} value\n * @param {string} filtername\n * @param {string} operator\n * @param {*} additionalvaluesObject\n * @param {string} idstring\n */\nfunction applySpanfilter(column, value, filtername, operator, additionalvaluesObject, idstring) {\n  if (operator.length >= 1) {\n    if (column && filtername) {\n      if (!checked[idstring][column]) {\n        checked[idstring][column] = {};\n      }\n      if (!checked[idstring][column][filtername]) {\n        checked[idstring][column][filtername] = {};\n      }\n      checked[idstring][column][filtername][operator] = value;\n      if (Object.keys(additionalvaluesObject).length > 0) {\n        checked[idstring][column][filtername + 'a'] = additionalvaluesObject;\n      }\n    }\n  }\n}\n\n/**\n * Unsetting empty keys in checked object. If a filter param was created and deleted later on we will need this.\n * @param {*} key1\n * @param {*} key2\n * @param {string} idstring\n */\nfunction unsetEmptyFieldsInCheckedObject(key1, key2, idstring) {\n  if (checked[idstring][key1]) {\n    if (checked[idstring][key1][key2]) {\n      if (Object.keys(checked[idstring][key1][key2]).length < 1) {\n        delete checked[idstring][key1][key2];\n      }\n    }\n  }\n\n  if (checked[idstring][key1]) {\n    if (Object.keys(checked[idstring][key1]).length < 1) {\n      delete checked[idstring][key1];\n    }\n  }\n}\n\n/**\n * Checking Date and Timepicker for corresponding element and returning Unix Code.\n * @param {*} filtercontainer\n * @param {string} id\n * @returns {string}\n */\nexport function getDateAndTimePickerDataAsUnix(filtercontainer, id = '') {\n\n  let datepicker = filtercontainer.querySelector('input[type=\"date\"][id*=\"' + id + '\"]');\n  let date = datepicker.value;\n\n  let timepicker = filtercontainer.querySelector('input[type=\"time\"][id*=\"' + id + '\"]');\n  let time = timepicker.value;\n\n  let unixTimestamp = Date.parse(date + ' ' + time);\n  let tenDigitTimestamp = unixTimestamp;\n\n  return tenDigitTimestamp;\n}\n\n/**\n * Generating and displaying filterparams in URL.\n * @param {string} filterobjects\n * @param {string} searchstring\n * @param {string} sort\n * @param {*} dir\n */\nexport function updateUrlWithFilterSearchSort(filterobjects, searchstring, sort, dir) {\n\n  const url = new URL(window.location.href);\n\n  let params = url.searchParams;\n\n  // We don't actually want to delete all url params, only those we don't use for searching.\n  params.delete('wbtfilter');\n  params.delete('wbtsearch');\n  params.delete('tsort');\n  params.delete('tdir');\n\n  window.history.replaceState(null, '', url);\n\n  if (filterobjects) {\n    url.searchParams.append('wbtfilter', filterobjects);\n  }\n  if (searchstring !== \"\" &&\n  searchstring !== null) {\n    url.searchParams.append('wbtsearch', searchstring);\n  }\n  if (sort !== \"\" &&\n  sort !== null) {\n    url.searchParams.append('tsort', sort);\n  }\n  if (dir !== null &&\n    dir > 0) {\n    url.searchParams.append('tdir', dir);\n  }\n\n  window.history.pushState(null, null, url.toString());\n}\n\n/**\n * Generating and displaying filterparams in URL.\n * @param {string} idstring\n * @param {string} filterobjects\n * @param {string} searchstring\n * @param {string} sort\n * @param {*} dir\n */\nexport function updateDownloadUrlWithFilterSearchSort(idstring, filterobjects, searchstring, sort, dir) {\n\n  // The container will hold wunderbyteTableClass, wunderbyteTableFilter, wunderbyteTableSearch classes.\n  let container = document.querySelector(\".wunderbyte_table_container_\" + idstring);\n  if (!container) {\n      return;\n  }\n\n  let url = '';\n  let formelement = null;\n  try {\n    formelement = container.querySelector('form.wb-table-download-buttons');\n    url = new URL(formelement.getAttribute('action'));\n  } catch (e) {\n\n    // eslint-disable-next-line no-console\n    console.log(e);\n    return;\n  }\n\n  let params = url.searchParams;\n\n  // We don't actually want to delete all url params, only those we don't use for searching.\n  params.delete('wbtfilter');\n  params.delete('wbtsearch');\n  params.delete('tsort');\n  params.delete('tdir');\n\n  if (filterobjects) {\n    url.searchParams.append('wbtfilter', filterobjects);\n  }\n  if (searchstring !== \"\" &&\n  searchstring !== null) {\n    url.searchParams.append('wbtsearch', searchstring);\n  }\n  if (sort !== \"\" &&\n  sort !== null) {\n    url.searchParams.append('tsort', sort);\n  }\n  if (dir !== null &&\n    dir > 0) {\n    url.searchParams.append('tdir', dir);\n  }\n\n  formelement.action = url.toString();\n}\n\n  /**\n   * Gets an array of checkboxes for every table by idstring.\n   * @param {*} name\n   * @param {*} selector\n   * @param {*} idstring\n   */\n   export function getChecked(name, selector, idstring) {\n\n    // We might have more than one Table, therefore we first have to get all tables.\n\n    const wbTable = document.querySelector(selector);\n\n    checked[idstring][name] = Array.from(\n      wbTable.querySelectorAll(\"input[name=\" + name + \"]\")\n    ).filter(function(el) {\n      return el.checked;\n    }).map(function(el) {\n      return el.value;\n    });\n\n    // If there are no checked boxes, we unset the key alltogether.\n    if (checked[idstring][name].length < 1) {\n      delete checked[idstring][name];\n    }\n  }\n\n/**\n * Returns json of active filters as json.\n * @param {*} idstring\n * @returns {string}\n */\nexport function getFilterObjects(idstring) {\n\n  if (!(idstring in checked)) {\n    return '';\n  }\n\n  let hasvalues = false;\n\n  for (const [, value] of Object.entries(checked[idstring])) {\n\n    if (value.length > 0 || Object.keys(value).length > 0) {\n      hasvalues = true;\n    }\n  }\n\n  if (!hasvalues) {\n    return '';\n  }\n  return JSON.stringify(checked[idstring]);\n}\n\n/**\n * Render the checkboxes for the filer.\n * @param {string} filterjson\n * @param {string} idstring\n * @param {string} encodedtable\n */\n    export const renderFilter = (filterjson, idstring, encodedtable) => {\n\n    // We render the filter only once, so if we find it already, we don't render it.\n\n    const selector = SELECTORS.CONTAINER + idstring;\n    const container = document.querySelector(selector);\n    const filtercontainer = container.querySelector(SELECTORS.FILTER);\n\n    if (filtercontainer) {\n      return;\n    }\n\n    Templates.renderForPromise('local_wunderbyte_table/filter', filterjson).then(({html}) => {\n\n        container.insertAdjacentHTML('afterbegin', html);\n\n        initializeCheckboxes(selector, idstring, encodedtable);\n\n        return;\n    }).catch(e => {\n        // eslint-disable-next-line no-console\n        console.log(e);\n    });\n};"],"names":["obj","selector","idstring","encodedtable","container","document","querySelector","button","addEventListener","componentscontainer","remove","resetCheckedObject","sort","getSortSelection","callLoadData","filterobjects","searchstring","dir","url","formelement","URL","getAttribute","e","console","log","params","searchParams","delete","append","action","toString","window","location","href","history","replaceState","pushState","_templates","__esModule","default","checked","initializeCheckboxes","filterContainer","SELECTORS","FILTER","dataset","initialized","selects","querySelectorAll","filterElements","hasOwnProperty","applyChangelistener","nodelist","forEach","el","idstring2","toggleFilterelement","stopPropagation","preventDefault","setTimeout","target","dateelement","getDates","getChecked","name","getFilterObjects","getSearchInput","columnname","filtercontainer","closest","filtername","filtercheckbox","dates","timespan","startdate","getDateAndTimePickerDataAsUnix","enddate","error","setDateAndTimePickerDataFromUnix","compareDateValues","select","operator","value","startdatepicker","firstcolumn","applytocolumn","firstoperator","additionalFirstColumnValues","valuefirstcolumn","enddatepicker","secondcolumn","secondoperator","additionalSecondColumnValues","valuesecondcolumn","Number","isInteger","applySpanfilter","unsetEmptyFieldsInCheckedObject","setTimespanFilter","String","Object","keys","key","okey","id","arguments","length","undefined","dateobject","Date","toISOString","split","toLocaleTimeString","slice","column","col","additionalvaluesObject","key1","key2","date","time","parse","wbTable","Array","from","filter","map","hasvalues","entries","JSON","stringify","_exports","renderFilter","filterjson","CONTAINER","Templates","renderForPromise","then","_ref","html","insertAdjacentHTML","catch"],"mappings":"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"}