{"version":3,"file":"filter.min.js","sources":["../src/filter.js"],"sourcesContent":["\n// This file is part of Moodle - http://moodle.org/\n//\n// Moodle is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Moodle is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\n\n/*\n * @package    local_wunderbyte_table\n * @copyright  Wunderbyte GmbH <info@wunderbyte.at>\n * @license    http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n */\n\nimport {getSearchInput} from 'local_wunderbyte_table/search';\nimport {getSortSelection} from 'local_wunderbyte_table/sort';\n\nimport {callLoadData, SELECTORS} from 'local_wunderbyte_table/init';\nimport Templates from 'core/templates';\n\n// These variables are specific to the filter.\nvar checked = {};\n\n/**\n * Initialize Checkboxes.\n * @param {string} selector\n * @param {string} idstring\n * @param {string} encodedtable\n */\n export function initializeCheckboxes(selector, idstring, encodedtable) {\n\n  const filterContainer = document.querySelector(selector + SELECTORS.FILTER);\n\n  if (!filterContainer || filterContainer.dataset.initialized) {\n    return;\n  }\n\n  const allCheckboxes = filterContainer.querySelectorAll(\"input[type=checkbox]\");\n\n  if (!allCheckboxes) {\n      return;\n  }\n\n  // We create the key for the checked items of this table.\n  if (!checked.hasOwnProperty(idstring)) {\n    checked[idstring] = {};\n  }\n\n  // filterContainer.querySelectorAll(\".form-group\").forEach(e => {\n\n  //     if (!categories || !categories.hasOwnProperty(idstring)) {\n  //       categories[idstring] = [];\n  //     }\n\n  //     categories[idstring].push(e.getAttribute(\"name\"));\n  //     getChecked(e.getAttribute(\"name\"), selector, idstring);\n  // });\n\n  allCheckboxes.forEach(el => {\n\n      if (!el.dataset.idstring) {\n        el.dataset.idstring = idstring;\n      } else {\n        el.dataset.idstring2 = idstring;\n      }\n\n      el.addEventListener(\"change\", (e) => toggleCheckbox(e, selector, idstring, encodedtable));\n  });\n\n  filterContainer.dataset.initialized = true;\n}\n\n\n/**\n * Eventhandler\n * @param {*} e\n * @param {*} selector\n * @param {*} idstring\n * @param {*} encodedtable\n */\n export function toggleCheckbox(e, selector, idstring, encodedtable) {\n\n  e.stopPropagation();\n  e.preventDefault();\n\n  // Check if Checkbox corresponds to datepicker\n  if (e.target.dataset.datecheckbox == 'datecheckbox') {\n    getDates(e, selector, idstring);\n  } else {\n    getChecked(e.target.name, selector, idstring);\n  }\n\n\n  // Reload the filtered elements via ajax.\n\n  const filterobjects = getFilterObjects(idstring);\n  const searchstring = getSearchInput(idstring);\n  const sort = getSortSelection(idstring);\n\n  // The filter reloads data from the Server.\n  // Because of pages and infinite scroll we don't have the data to do without.\n  callLoadData(idstring,\n    encodedtable,\n    0, // Pagenumber is always rest to 0.\n    null,\n    sort,\n    null,\n    null,\n    null,\n    filterobjects,\n    searchstring);\n}\n\n\n/**\n * Get the data from datepicker and timepicker\n * @param {*} e\n * @param {*} selector\n * @param {*} idstring\n */\nexport function getDates(e, selector, idstring) {\n\n      // We might have more than one Table, therefore we first have to get all tables.\n      const wbTable = document.querySelector(selector);\n\n      let name = e.target.name;\n      let dates = Array.from(\n        wbTable.querySelectorAll(\"input[name=\" + name + \"]\")\n      ).filter(function(el) {\n        return el.checked;\n      }).map(function(el) {\n        let unixcode = getDateAndTimePickerDataAsUnix(el, idstring);\n        return {[el.dataset.operator]: unixcode};\n      });\n\n    checked[idstring][name] = dates;\n\n\n    //checked[idstring].push(dates);\n      // eslint-disable-next-line no-console\n      //console.log(checked);\n\n\n  //schauen welche column\n  //schauen welcher elemente angew채hlt sind\n  //von den angew채hlten: auslesen date und time -> konvertieren in unix\n  //in array schreiben: dates[colname][operator][unixtime]\n\n\n}\n\n/**\n * Checking Date and Timepicker for corresponding element and returning Unix Code.\n * @param {*} el\n * @param {string} idstring\n * @returns {string}\n */\nexport function getDateAndTimePickerDataAsUnix(el, idstring) {\n\n  if (!el) {\n    return '';\n  }\n\n  let selector = SELECTORS.CONTAINER + idstring;\n\n  //filtercontainer sollte schon mal nur der coloumname sein\n  //alle elemente (checkbox, picker) mit selben attribut ansprechen zB class\n  //dann nur eine foreach\n\n  //change listenere checkbox auch 체ber picker dr체ber\n  //wenn change und datepicker element (checkbox, picker..) -> check if checkbox is true, schreiben in array\n\n  let filterContainer = document.querySelector(selector + SELECTORS.FILTER);\n\n\n  const allDatepicker = filterContainer.querySelectorAll(\"input[type=date]\");\n  const allTimepicker = filterContainer.querySelectorAll(\"input[type=time]\");\n\n  let filtername = el.dataset.filtername;\n  var dates = {};\n\n  allDatepicker.forEach(node => {\n    if (node.name == filtername) {\n      dates['date'] = new Date(node.value);\n    }\n  });\n\n  allTimepicker.forEach(node => {\n    if (node.name == filtername) {\n    dates['time'] = node.value;\n    }\n  });\n\n  // eslint-disable-next-line no-undef\n  let dateTimeString = dates['date'].toISOString().split('T')[0] + 'T' + dates['time'] + ':00.000Z';\n  let unixTimestamp = Date.parse(dateTimeString) / 1000;\n  return unixTimestamp;\n}\n\n/**\n * Generating and displaying filterparams in URL.\n * @param {string} filterobjects\n * @param {string} searchstring\n * @param {string} sort\n * @param {*} dir\n */\nexport function updateUrlWithFilterSearchSort(filterobjects, searchstring, sort, dir) {\n\n  const url = new URL(window.location.href);\n\n  url.search = \"\";\n  history.replaceState(null, '', url);\n\n  if (filterobjects) {\n    url.searchParams.append('wbtfilter', filterobjects);\n  }\n  if (searchstring !== \"\" &&\n  searchstring !== null) {\n    url.searchParams.append('wbtsearch', searchstring);\n  }\n  if (sort !== \"\" &&\n  sort !== null) {\n    url.searchParams.append('tsort', sort);\n  }\n  if (dir !== null &&\n    dir > 0) {\n    url.searchParams.append('tdir', dir);\n  }\n\n  window.history.pushState(null, null, url.toString());\n}\n\n  /**\n   * Gets an array of checkboxes for every table by idstring.\n   * @param {*} name\n   * @param {*} selector\n   * @param {*} idstring\n   */\n   export function getChecked(name, selector, idstring) {\n\n    // We might have more than one Table, therefore we first have to get all tables.\n\n    const wbTable = document.querySelector(selector);\n\n    checked[idstring][name] = Array.from(\n      wbTable.querySelectorAll(\"input[name=\" + name + \"]\")\n    ).filter(function(el) {\n      return el.checked;\n    }).map(function(el) {\n      return el.value;\n    });\n\n    // eslint-disable-next-line no-console\n    console.log(\"checked[idstring][name] \" + checked[idstring][name]);\n\n    // If there are no checked boxes, we unset the key alltogether.\n    if (checked[idstring][name].length < 1) {\n      delete checked[idstring][name];\n    }\n  }\n\n  /**\n * Returns json of active filters as json.\n * @param {*} idstring\n * @returns {string}\n */\nexport function getFilterObjects(idstring) {\n\n  if (!(idstring in checked)) {\n    return '';\n  }\n\n  let hasvalues = false;\n  // eslint-disable-next-line no-unused-vars\n  for (const [key, value] of Object.entries(checked[idstring])) {\n\n    if (value.length > 0) {\n      hasvalues = true;\n    }\n  }\n\n  if (!hasvalues) {\n    return '';\n  }\n\n  return JSON.stringify(checked[idstring]);\n}\n\n/**\n * Render the checkboxes for the filer.\n * @param {string} filterjson\n * @param {string} idstring\n * @param {string} encodedtable\n */\n    export const renderFilter = (filterjson, idstring, encodedtable) => {\n\n    // We render the filter only once, so if we find it already, we don't render it.\n\n    const selector = SELECTORS.CONTAINER + idstring;\n    const container = document.querySelector(selector);\n    const filtercontainer = container.querySelector(SELECTORS.FILTER);\n\n    if (filtercontainer) {\n      return;\n    }\n\n    Templates.renderForPromise('local_wunderbyte_table/filter', filterjson).then(({html}) => {\n\n        container.insertAdjacentHTML('afterbegin', html);\n\n        initializeCheckboxes(selector, idstring, encodedtable);\n\n        return;\n    }).catch(e => {\n        // eslint-disable-next-line no-console\n        console.log(e);\n    });\n};"],"names":["filterobjects","searchstring","sort","dir","url","URL","window","location","href","search","history","replaceState","searchParams","append","pushState","toString","checked","initializeCheckboxes","selector","idstring","encodedtable","filterContainer","document","querySelector","SELECTORS","FILTER","dataset","initialized","allCheckboxes","querySelectorAll","hasOwnProperty","forEach","el","idstring2","addEventListener","e","toggleCheckbox","stopPropagation","preventDefault","target","datecheckbox","getDates","getChecked","name","getFilterObjects","wbTable","dates","Array","from","filter","map","unixcode","getDateAndTimePickerDataAsUnix","operator","CONTAINER","allDatepicker","allTimepicker","filtername","node","Date","value","dateTimeString","toISOString","split","parse","console","log","length","hasvalues","key","Object","entries","JSON","stringify","filterjson","container","renderForPromise","then","_ref","html","insertAdjacentHTML","catch"],"mappings":"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"}