{"version":3,"sources":["../src/search.js"],"names":["lastsearchinputs","renderSearchbox","idstring","selector","container","document","querySelector","searchcontainer","Templates","renderForPromise","then","html","insertAdjacentHTML","initializeSearch","catch","e","console","log","containerselector","encodedtable","inputElement","dataset","initialized","addEventListener","now","Date","setTimeout","searchstring","getSearchInput","filterobjects","sort","value","length"],"mappings":"oTAsBA,uD,GAMIA,CAAAA,CAAgB,CAAG,E,CAMTC,CAAe,CAAG,SAACC,CAAD,CAAc,IAEpCC,CAAAA,CAAQ,CAAG,+BAAiCD,CAFR,CAGpCE,CAAS,CAAGC,QAAQ,CAACC,aAAT,CAAuBH,CAAvB,CAHwB,CAIpCI,CAAe,CAAGH,CAAS,CAACE,aAAV,CAAwB,cAAxB,CAJkB,CAM1C,GAAIC,CAAJ,CAAqB,CACnB,MACD,CAEDC,UAAUC,gBAAV,CAA2B,+BAA3B,CAA4D,EAA5D,EAAgEC,IAAhE,CAAqE,WAAY,IAAVC,CAAAA,CAAU,GAAVA,IAAU,CAE7EP,CAAS,CAACQ,kBAAV,CAA6B,YAA7B,CAA2CD,CAA3C,EAEAE,CAAgB,CAACV,CAAD,CAGnB,CAPD,EAOGW,KAPH,CAOS,SAAAC,CAAC,CAAI,CAEVC,OAAO,CAACC,GAAR,CAAYF,CAAZ,CACH,CAVD,CAWH,C,qBAUO,QAASF,CAAAA,CAAT,CAA0BK,CAA1B,CAA6ChB,CAA7C,CAAuDiB,CAAvD,CAAqE,CAEzE,GAAMC,CAAAA,CAAY,CAAGf,QAAQ,CAACC,aAAT,CAAuBY,CAAiB,CAAG,eAA3C,CAArB,CAEA,GAAI,CAACE,CAAL,CAAmB,CACf,MACH,CAED,GAAI,CAACA,CAAY,CAACC,OAAb,CAAqBC,WAA1B,CAAuC,CAErCF,CAAY,CAACC,OAAb,CAAqBC,WAArB,IAEAF,CAAY,CAACG,gBAAb,CAA8B,OAA9B,CAAuC,UAAM,CAE3C,GAAIC,CAAAA,CAAG,CAAGC,IAAI,CAACD,GAAL,EAAV,CAEAxB,CAAgB,CAACE,CAAD,CAAhB,CAA6BsB,CAA7B,CAEAE,UAAU,CAAC,UAAM,CAEf,GAAMC,CAAAA,CAAY,CAAGC,CAAc,CAAC1B,CAAD,CAAnC,CAKA,GAAIF,CAAgB,CAACE,CAAD,CAAhB,GAA+BsB,CAA/B,EACoB,IAAjB,GAAAG,CADP,CAC8B,IAEtBE,CAAAA,CAAa,CAAG,sBAAgB3B,CAAhB,CAFM,CAGtB4B,CAAI,CAAG,uBAAiB5B,CAAjB,CAHe,CAK5B,mBAAaA,CAAb,CACEiB,CADF,CAEE,CAFF,CAGE,IAHF,CAIEW,CAJF,CAKE,IALF,CAME,IANF,CAOE,IAPF,CAQED,CARF,CASEF,CATF,CAWD,CACF,CAzBS,CAyBP,GAzBO,CA4BX,CAlCD,CAmCD,CACJ,CAOM,QAASC,CAAAA,CAAT,CAAwB1B,CAAxB,CAAkC,CAEvC,GAAMkB,CAAAA,CAAY,CAAGf,QAAQ,CAACC,aAAT,CAAuB,+BAAiCJ,CAAjC,CAA4C,eAAnE,CAArB,CAEA,GAAI,CAACkB,CAAL,CAAmB,CACjB,MAAO,KACR,CAEC,GAAIO,CAAAA,CAAY,CAAG,IAAnB,CAEA,GAAgC,CAA5B,CAAAP,CAAY,CAACW,KAAb,CAAmBC,MAAnB,EACiC,CAA9B,GAAAZ,CAAY,CAACW,KAAb,CAAmBC,MAD1B,CACwC,CACtCL,CAAY,CAAGP,CAAY,CAACW,KAC7B,CAEH,MAAOJ,CAAAA,CACR,C","sourcesContent":["\n// This file is part of Moodle - http://moodle.org/\n//\n// Moodle is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Moodle is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\n\n/*\n * @package    local_wunderbyte_table\n * @copyright  Wunderbyte GmbH <info@wunderbyte.at>\n * @license    http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n */\n\nimport Templates from 'core/templates';\nimport {callLoadData} from 'local_wunderbyte_table/init';\n\nimport {getFilterOjects} from 'local_wunderbyte_table/filter';\nimport {getSortSelection} from 'local_wunderbyte_table/sort';\n\nvar lastsearchinputs = {};\n\n/**\n   * Render the checkboxes for the filer.\n   * @param {string} idstring\n   */\n export const renderSearchbox = (idstring) => {\n\n    const selector = \".wunderbyte_table_container_\" + idstring;\n    const container = document.querySelector(selector);\n    const searchcontainer = container.querySelector(\"input.search\");\n\n    if (searchcontainer) {\n      return;\n    }\n\n    Templates.renderForPromise('local_wunderbyte_table/search', []).then(({html}) => {\n\n        container.insertAdjacentHTML('afterbegin', html);\n\n        initializeSearch(selector);\n\n        return;\n    }).catch(e => {\n        // eslint-disable-next-line no-console\n        console.log(e);\n    });\n};\n\n\n/**\n * Function to initialize the search after rendering the searchbox.\n * @param {*} containerselector\n * @param {*} idstring\n * @param {*} encodedtable\n * @returns {*}\n */\n export function initializeSearch(containerselector, idstring, encodedtable) {\n\n    const inputElement = document.querySelector(containerselector + ' input.search');\n\n    if (!inputElement) {\n        return;\n    }\n\n    if (!inputElement.dataset.initialized) {\n\n      inputElement.dataset.initialized = true;\n\n      inputElement.addEventListener('keyup', () => {\n\n        let now = Date.now();\n\n        lastsearchinputs[idstring] = now;\n\n        setTimeout(() => {\n\n          const searchstring = getSearchInput(idstring);\n\n          // If the timevalue after the wait is the same as before, we didn't have another input.\n          // we want to make sure we do no loading while we are waiting for the answer.\n          // And the iput string must be longr than 3.\n          if (lastsearchinputs[idstring] === now\n              && searchstring !== null) {\n\n            const filterobjects = getFilterOjects(idstring);\n            const sort = getSortSelection(idstring);\n\n            callLoadData(idstring,\n              encodedtable,\n              0, // We set page to 0 because we need to start the container anew.\n              null,\n              sort,\n              null,\n              null,\n              null,\n              filterobjects,\n              searchstring);\n\n          }\n        }, 400);\n\n        return;\n      });\n    }\n}\n\n/**\n * Function to read the searchstring from the input leement.\n * @param {*} idstring\n * @returns {null|string}\n */\nexport function getSearchInput(idstring) {\n\n  const inputElement = document.querySelector(\".wunderbyte_table_container_\" + idstring + ' input.search');\n\n  if (!inputElement) {\n    return null;\n  }\n\n    let searchstring = null;\n\n    if (inputElement.value.length > 2\n        || inputElement.value.length === 0) {\n      searchstring = inputElement.value;\n    }\n\n  return searchstring;\n}\n"],"file":"search.min.js"}