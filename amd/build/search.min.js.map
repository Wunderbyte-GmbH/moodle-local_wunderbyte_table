{"version":3,"file":"search.min.js","sources":["../src/search.js"],"sourcesContent":["\n// This file is part of Moodle - http://moodle.org/\n//\n// Moodle is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Moodle is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\n\n/*\n * @package    local_wunderbyte_table\n * @copyright  Wunderbyte GmbH <info@wunderbyte.at>\n * @license    http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n */\n\nimport Templates from 'core/templates';\nimport {callLoadData} from 'local_wunderbyte_table/init';\n\nvar checked = {};\nvar categories = [];\n\n\nvar listContainerSelector = '';\n\nvar idstring = '';\nvar encodedtable = '';\n\nvar lastsearchinput = 0;\n\nvar loading = false;\n\n/**\n * Store some params globally.\n * @param {string} listContainer\n */\nexport const init = (listContainer) => {\n\n    // eslint-disable-next-line no-console\n    console.log(\"listContainer\", listContainer);\n\n    listContainerSelector = listContainer;\n\n    initializeSearch();\n\n};\n\nexport const searchInput = (inputElement, elementToHide, elementToSearch) => {\n    let filter, li, a, i, txtValue;\n\n    filter = inputElement.value.toUpperCase();\n\n    li = document.querySelectorAll(elementToHide);\n\n    for (i = 0; i < li.length; i++) {\n        if (elementToSearch) {\n            a = li[i].querySelector(elementToSearch);\n        } else {\n            a = li[i];\n        }\n\n        txtValue = a.textContent || a.innerText;\n\n        if (txtValue.toUpperCase().indexOf(filter) > -1) {\n            li[i].style.display = \"\";\n        } else {\n            li[i].style.display = \"none\";\n        }\n    }\n};\n\n\n/**\n * Eventhandler\n *\n * @param {*} e - event\n */\n export const toggleCheckbox = (e) => {\n\n    // eslint-disable-next-line no-console\n    console.log('checked', e.target.name);\n    getChecked(e.target.name);\n\n    // Reload the filtered elements via ajax.\n\n    const filterobjects = getFilterOjects();\n    const searchstring = getSearchInput();\n\n    // eslint-disable-next-line no-console\n    console.log('reload from filter ', filterobjects);\n\n    callLoadData(idstring,\n    encodedtable,\n    0,\n    null,\n    null,\n    null,\n    null,\n    null,\n    filterobjects,\n    searchstring);\n\n  };\n\n  /**\n   * Check which Checkboxes are selected inside a group.\n   *\n   * @param {*} name of Element group\n   */\n  export const getChecked = (name) => {\n    checked[name] = Array.from(\n      document.querySelectorAll(\"input[name=\" + name + \"]:checked\")\n    ).map(function(el) {\n      return el.value;\n    });\n  };\n\n  /**\n   * Render the checkboxes for the filer.\n   * @param {string} filterjson\n   * @param {string} idstringvar\n   * @param {string} encodedtable\n   */\n  export const renderFilter = (filterjson, idstringvar, encodedtable) => {\n\n    // We render the filter only once, so if we find it already, we don't render it.\n\n    // eslint-disable-next-line no-console\n    console.log(idstringvar);\n\n    idstring = idstringvar;\n\n    const selector = \".wunderbyte_table_container_\" + idstring;\n    const container = document.querySelector(selector);\n    const filtercontainer = container.querySelector(\".wunderbyteTableFilter\");\n\n    if (filtercontainer) {\n      return;\n    }\n\n    Templates.renderForPromise('local_wunderbyte_table/filter', filterjson).then(({html}) => {\n\n        // eslint-disable-next-line no-console\n        console.log(\"encodedtable: \", encodedtable);\n\n        container.insertAdjacentHTML('afterbegin', html);\n\n        initializeCheckboxes(selector, idstring, encodedtable);\n\n        return;\n    }).catch(e => {\n        // eslint-disable-next-line no-console\n        console.log(e);\n    });\n};\n\n/**\n   * Render the checkboxes for the filer.\n   * @param {string} idstring\n   */\n export const renderSearchbox = (idstring) => {\n\n    const selector = \".wunderbyte_table_container_\" + idstring;\n    const container = document.querySelector(selector);\n    const searchcontainer = container.querySelector(\"input.search\");\n\n    if (searchcontainer) {\n      return;\n    }\n\n    Templates.renderForPromise('local_wunderbyte_table/search', []).then(({html}) => {\n\n        container.insertAdjacentHTML('afterbegin', html);\n\n        initializeSearch(selector);\n\n        return;\n    }).catch(e => {\n        // eslint-disable-next-line no-console\n        console.log(e);\n    });\n};\n\n\n/**\n * Function to initialize the search after rendering the searchbox.\n */\n export function initializeSearch() {\n\n    const inputElement = document.querySelector(listContainerSelector + ' input.search');\n\n    if (!inputElement) {\n        return;\n    }\n\n    if (!inputElement.dataset.initialized) {\n\n      inputElement.dataset.initialized = true;\n\n      inputElement.addEventListener('keyup', () => {\n\n        let now = Date.now();\n\n        lastsearchinput = now;\n\n        setTimeout(() => {\n\n          const searchstring = getSearchInput();\n\n          // If the timevalue after the wait is the same as before, we didn't have another input.\n          // we want to make sure we do no loading while we are waiting for the answer.\n          // And the iput string must be longr than 3.\n          if (lastsearchinput === now\n              && loading == false\n              && searchstring !== null) {\n\n            const filterobjects = getFilterOjects();\n\n            callLoadData(idstring,\n              encodedtable,\n              0, // We set page to 0 because we need to start the container anew.\n              null,\n              null,\n              null,\n              null,\n              null,\n              filterobjects,\n              searchstring);\n\n          }\n        }, 400);\n\n        return;\n      });\n    }\n}\n\n/**\n * Returns json of active filters as json.\n * @returns {string}\n */\nexport function getFilterOjects() {\n\n  return JSON.stringify(checked);\n}\n\n/**\n * Function to read the searchstring from the input leement.\n * @returns {null|string}\n */\nexport function getSearchInput() {\n\n  const inputElement = document.querySelector(listContainerSelector + ' input.search');\n\n  if (!inputElement) {\n    return null;\n  }\n\n    let searchstring = null;\n\n    if (inputElement.value.length > 3\n        || inputElement.value.length === 0) {\n      searchstring = inputElement.value;\n    }\n\n  return searchstring;\n}\n\n/**\n * Initialize Checkboxes.\n * @param {string} selector\n * @param {string} idstringvar\n * @param {string} encodedtablevar\n */\nexport function initializeCheckboxes(selector, idstringvar, encodedtablevar) {\n\n    encodedtable = encodedtablevar;\n    idstring = idstringvar;\n\n    const filterContainer = document.querySelector(selector + \" .wunderbyteTableFilter\");\n\n    if (!filterContainer || filterContainer.dataset.initialized) {\n      return;\n    }\n\n    const allCheckboxes = filterContainer.querySelectorAll(\"input[type=checkbox]\");\n\n    if (!allCheckboxes) {\n        return;\n    }\n\n    filterContainer.querySelectorAll(\".form-group\").forEach(e => {\n        categories.push(e.getAttribute(\"name\"));\n        getChecked(e.getAttribute(\"name\"));\n    });\n\n    allCheckboxes.forEach(el => {\n        el.addEventListener(\"change\", toggleCheckbox);\n    });\n\n    filterContainer.dataset.initialized = true;\n}\n"],"names":["checked","categories","listContainerSelector","idstring","encodedtable","lastsearchinput","listContainer","console","log","initializeSearch","inputElement","elementToHide","elementToSearch","filter","li","a","i","txtValue","value","toUpperCase","document","querySelectorAll","length","querySelector","textContent","innerText","indexOf","style","display","toggleCheckbox","e","target","name","getChecked","filterobjects","getFilterOjects","searchstring","getSearchInput","Array","from","map","el","filterjson","idstringvar","selector","container","renderForPromise","then","_ref","html","insertAdjacentHTML","initializeCheckboxes","catch","dataset","initialized","addEventListener","now","Date","setTimeout","JSON","stringify","encodedtablevar","filterContainer","allCheckboxes","forEach","push","getAttribute","_ref2"],"mappings":"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"}