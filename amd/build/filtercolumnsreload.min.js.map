{"version":3,"file":"filtercolumnsreload.min.js","sources":["../src/filtercolumnsreload.js"],"sourcesContent":["import Ajax from 'core/ajax';\n\n/** @param {string} encodedtable */\nexport const init = (encodedtable) => {\n    const observeDOMChanges = (callback) => {\n        const observer = new MutationObserver((mutations) => {\n            mutations.forEach((mutation) => {\n                if (mutation.addedNodes) {\n                    mutation.addedNodes.forEach((node) => {\n                        if (node instanceof HTMLElement && node.querySelector('[name=\"filter_columns\"]')) {\n                            callback(node.querySelector('[name=\"filter_columns\"]'));\n                        }\n                    });\n                }\n            });\n        });\n        observer.observe(document.body, {childList: true, subtree: true});\n    };\n    observeDOMChanges((dropdown) => {\n        dropdown.addEventListener('change', (event) => {\n            const selectedValue = event.target.value;\n            Ajax.call([{\n                methodname: 'local_wunderbyte_table_get_filter_column_data',\n                args: {\n                    filtercolumn: selectedValue,\n                    encodedtable: encodedtable\n                },\n                done: (response) => {\n                    const filteredit = document.getElementById('filter-edit-fields');\n                    if (filteredit && response.filtereditfields) {\n                        filteredit.innerHTML = response.filtereditfields;\n                    }\n                    const filteradd = document.getElementById('filter-add-field');\n                    if (filteradd && response.filteraddfields) {\n                        filteradd.innerHTML = response.filteraddfields;\n                    }\n                },\n                fail: (error) => {\n                    // eslint-disable-next-line no-console\n                    console.error('Web service error:', error);\n                }\n            }]);\n        });\n    });\n};"],"names":["e","_ajax","__esModule","default","_exports","init","encodedtable","callback","dropdown","addEventListener","event","selectedValue","target","value","Ajax","call","methodname","args","filtercolumn","done","response","filteredit","document","getElementById","filtereditfields","innerHTML","filteradd","filteraddfields","fail","error","console","MutationObserver","mutations","forEach","mutation","addedNodes","node","HTMLElement","querySelector","observe","body","childList","subtree"],"mappings":"sGAA6B,IAAAA,+EAA7BC,OAA6BD,EAA7BC,QAA6BD,EAAAE,WAAAF,EAAAG,CAAAA,QAAAH,GA4C3BI,SAAAC,KAzCmBC,eACUC,sBAcRC,WACfA,SAASC,iBAAiB,UAAWC,QACjC,MAAMC,cAAgBD,MAAME,OAAOC,MACnCC,MAAIX,QAACY,KAAK,CAAC,CACPC,WAAY,gDACZC,KAAM,CACFC,aAAcP,cACdL,aAAcA,cAElBa,KAAOC,WACH,MAAMC,WAAaC,SAASC,eAAe,sBACvCF,YAAcD,SAASI,mBACvBH,WAAWI,UAAYL,SAASI,kBAEpC,MAAME,UAAYJ,SAASC,eAAe,oBACtCG,WAAaN,SAASO,kBACtBD,UAAUD,UAAYL,SAASO,gBACnC,EAEJC,KAAOC,QAEHC,QAAQD,MAAM,qBAAsBA,MAAM,IAE/C,GACL,EArCe,IAAIE,kBAAkBC,YACnCA,UAAUC,SAASC,WACXA,SAASC,YACTD,SAASC,WAAWF,SAASG,OACrBA,gBAAgBC,aAAeD,KAAKE,cAAc,4BAClD/B,SAAS6B,KAAKE,cAAc,2BAChC,GAER,GACF,IAEGC,QAAQjB,SAASkB,KAAM,CAACC,WAAW,EAAMC,SAAS,GA2B7D,CACJ"}