define("local_wunderbyte_table/filter",["exports","local_wunderbyte_table/search","local_wunderbyte_table/sort","local_wunderbyte_table/init","core/templates"],(function(_exports,_search,_sort,_init,_templates){var obj;
/*
   * @package    local_wunderbyte_table
   * @copyright  Wunderbyte GmbH <info@wunderbyte.at>
   * @license    http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later
   */Object.defineProperty(_exports,"__esModule",{value:!0}),_exports.getChecked=getChecked,_exports.getDateAndTimePickerDataAsUnix=getDateAndTimePickerDataAsUnix,_exports.getDates=getDates,_exports.getFilterObjects=getFilterObjects,_exports.initializeCheckboxes=initializeCheckboxes,_exports.renderFilter=void 0,_exports.toggleFilterelement=toggleFilterelement,_exports.updateUrlWithFilterSearchSort=function(filterobjects,searchstring,sort,dir){const url=new URL(window.location.href);url.search="",history.replaceState(null,"",url),console.log("filter ",filterobjects),filterobjects&&url.searchParams.append("wbtfilter",filterobjects);""!==searchstring&&null!==searchstring&&url.searchParams.append("wbtsearch",searchstring);""!==sort&&null!==sort&&url.searchParams.append("tsort",sort);null!==dir&&dir>0&&url.searchParams.append("tdir",dir);window.history.pushState(null,null,url.toString())},_templates=(obj=_templates)&&obj.__esModule?obj:{default:obj};var checked={};function initializeCheckboxes(selector,idstring,encodedtable){const filterContainer=document.querySelector(selector+_init.SELECTORS.FILTER);if(!filterContainer||filterContainer.dataset.initialized)return;const filterElements=filterContainer.querySelectorAll("input[class^='filterelement']");filterElements&&(checked.hasOwnProperty(idstring)||(checked[idstring]={}),filterElements.forEach((el=>{el.dataset.idstring?el.dataset.idstring2=idstring:el.dataset.idstring=idstring,el.addEventListener("change",(e=>toggleFilterelement(e,selector,idstring,encodedtable)))})),filterContainer.dataset.initialized=!0)}function toggleFilterelement(e,selector,idstring,encodedtable){e.stopPropagation(),e.preventDefault(),"dateelement"==e.target.dataset.dateelement?getDates(e,selector,idstring):getChecked(e.target.name,selector,idstring);const filterobjects=getFilterObjects(idstring),searchstring=(0,_search.getSearchInput)(idstring),sort=(0,_sort.getSortSelection)(idstring);(0,_init.callLoadData)(idstring,encodedtable,0,null,sort,null,null,null,filterobjects,searchstring)}function getDates(e,selector,idstring){const wbTableFilter=document.querySelector(selector);let name=e.target.name,filtername=e.target.dataset.filtername,dates={};wbTableFilter.querySelector('input[type="checkbox"][id^="'+filtername+'"]').checked&&(dates[e.target.dataset.operator]=getDateAndTimePickerDataAsUnix(name,filtername,selector),console.log(getDateAndTimePickerDataAsUnix(filtername))),console.log(dates),checked[idstring][name]||(checked[idstring][name]=[]),checked[idstring][name][filtername]=dates,console.log(checked)}function getDateAndTimePickerDataAsUnix(name,filtername,selector){const wbTable=document.querySelector(selector);let datepicker=wbTable.querySelector('input[type="date"][id^="'+filtername+'"][name="'+name+'"]'),date=new Date(datepicker.value),time=wbTable.querySelector('input[type="time"][id^="'+filtername+'"][name="'+name+'"]').value,dateTimeString=date.toISOString().split("T")[0]+"T"+time+":00.000Z";return Date.parse(dateTimeString)/1e3}function getChecked(name,selector,idstring){const wbTable=document.querySelector(selector);checked[idstring][name]=Array.from(wbTable.querySelectorAll("input[name="+name+"]")).filter((function(el){return el.checked})).map((function(el){return el.value})),console.log("checked[idstring][name] "+checked[idstring][name]),checked[idstring][name].length<1&&delete checked[idstring][name]}function getFilterObjects(idstring){if(!(idstring in checked))return"";let hasvalues=!1;for(const[key,value]of Object.entries(checked[idstring]))(value.length>0||Object.keys(value).length>0)&&(hasvalues=!0);return hasvalues?JSON.stringify(checked[idstring]):""}_exports.renderFilter=(filterjson,idstring,encodedtable)=>{const selector=_init.SELECTORS.CONTAINER+idstring,container=document.querySelector(selector);container.querySelector(_init.SELECTORS.FILTER)||_templates.default.renderForPromise("local_wunderbyte_table/filter",filterjson).then((_ref=>{let{html:html}=_ref;container.insertAdjacentHTML("afterbegin",html),initializeCheckboxes(selector,idstring,encodedtable)})).catch((e=>{console.log(e)}))}}));

//# sourceMappingURL=filter.min.js.map