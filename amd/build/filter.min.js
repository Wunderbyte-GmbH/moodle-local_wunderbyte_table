define("local_wunderbyte_table/filter",["exports","local_wunderbyte_table/search","local_wunderbyte_table/sort","local_wunderbyte_table/init","core/templates"],(function(_exports,_search,_sort,_init,_templates){var obj;
/*
   * @package    local_wunderbyte_table
   * @copyright  Wunderbyte GmbH <info@wunderbyte.at>
   * @license    http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later
   */Object.defineProperty(_exports,"__esModule",{value:!0}),_exports.getChecked=getChecked,_exports.getFilterOjects=getFilterOjects,_exports.initializeCheckboxes=initializeCheckboxes,_exports.renderFilter=void 0,_exports.toggleCheckbox=toggleCheckbox,_templates=(obj=_templates)&&obj.__esModule?obj:{default:obj};var checked={};function initializeCheckboxes(selector,idstring,encodedtable){var filterContainer=document.querySelector(selector+" .wunderbyteTableFilter");if(filterContainer&&!filterContainer.dataset.initialized){var allCheckboxes=filterContainer.querySelectorAll("input[type=checkbox]");allCheckboxes&&(checked.hasOwnProperty(idstring)||(checked[idstring]={}),allCheckboxes.forEach((function(el){el.addEventListener("change",(function(e){return toggleCheckbox(e,selector,idstring,encodedtable)}))})),filterContainer.dataset.initialized=!0)}}function toggleCheckbox(e,selector,idstring,encodedtable){getChecked(e.target.name,selector,idstring);var filterobjects=getFilterOjects(idstring),searchstring=(0,_search.getSearchInput)(idstring),sort=(0,_sort.getSortSelection)(idstring);(0,_init.callLoadData)(idstring,encodedtable,0,null,sort,null,null,null,filterobjects,searchstring)}function getChecked(name,selector,idstring){var wbTable=document.querySelector(selector);checked[idstring][name]=Array.from(wbTable.querySelectorAll("input[name="+name+"]:checked")).map((function(el){return el.value}))}function getFilterOjects(idstring){return idstring in checked?JSON.stringify(checked[idstring]):""}_exports.renderFilter=function(filterjson,idstring,encodedtable){var selector=".wunderbyte_table_container_"+idstring,container=document.querySelector(selector);container.querySelector(".wunderbyteTableFilter")||_templates.default.renderForPromise("local_wunderbyte_table/filter",filterjson).then((function(_ref){var html=_ref.html;container.insertAdjacentHTML("afterbegin",html),initializeCheckboxes(selector,idstring,encodedtable)})).catch((function(e){console.log(e)}))}}));

//# sourceMappingURL=filter.min.js.map